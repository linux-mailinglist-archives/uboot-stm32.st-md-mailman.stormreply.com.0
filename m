Return-Path: <uboot-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+uboot-stm32@lfdr.de
Delivered-To: lists+uboot-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 07C8252B298
	for <lists+uboot-stm32@lfdr.de>; Wed, 18 May 2022 08:47:15 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id C1E93C035BD;
	Wed, 18 May 2022 06:47:14 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx08-00178001.pphosted.com
 [91.207.212.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 745C3C57183
 for <uboot-stm32@st-md-mailman.stormreply.com>;
 Wed, 18 May 2022 06:47:13 +0000 (UTC)
Received: from pps.filterd (m0046660.ppops.net [127.0.0.1])
 by mx07-00178001.pphosted.com (8.17.1.5/8.17.1.5) with ESMTP id 24I3T7qM017719;
 Wed, 18 May 2022 08:46:53 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=foss.st.com;
 h=from : to : cc :
 subject : date : message-id : in-reply-to : references : mime-version :
 content-type : content-transfer-encoding; s=selector1;
 bh=ACG9z3qVS3vJxrw8fXYoo9xdmfwsH8faEQ0tNRImbYA=;
 b=ZS0+0bYodxki1i9UtiXdMOh85Z/JrraVbD2D40N8ERGHkIHNnpfmG1KdoWA04Sms19dK
 NMKuBYFg5JLqCuh77nVEK9zj/vvuZMVFlvHFO+LY/4HTGmK+lHKArtDnVNdrh6bci9hd
 UXneRgFO5Hfydz/4hA3T8NU+onGW9HOzxPPF6BtmLjrm+BkcML6pHOo50oDlgIM3GERA
 9kL6iANo0Q5xTj5KoHm5YGdo5X5o+ZNzCgIuNGn8mCdYFckmwBlX+i0gzXsEhMFAzMmH
 H00RqYpGcUrtw3d06nh9yk3v4qs+4b7ufS9y0/KY87a9f1VabMAmwYP/AFpn2m3vqgKJ tw== 
Received: from beta.dmz-eu.st.com (beta.dmz-eu.st.com [164.129.1.35])
 by mx07-00178001.pphosted.com (PPS) with ESMTPS id 3g21j8yc4n-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Wed, 18 May 2022 08:46:53 +0200
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-eu.st.com (STMicroelectronics) with ESMTP id B9617100038;
 Wed, 18 May 2022 08:46:51 +0200 (CEST)
Received: from Webmail-eu.st.com (shfdag1node1.st.com [10.75.129.69])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id AD0A120FA5A;
 Wed, 18 May 2022 08:46:51 +0200 (CEST)
Received: from localhost (10.75.127.45) by SHFDAG1NODE1.st.com (10.75.129.69)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256) id 15.1.2308.20; Wed, 18 May
 2022 08:46:51 +0200
From: Patrice Chotard <patrice.chotard@foss.st.com>
To: <u-boot@lists.denx.de>
Date: Wed, 18 May 2022 08:46:47 +0200
Message-ID: <20220518064648.1843664-3-patrice.chotard@foss.st.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20220518064648.1843664-1-patrice.chotard@foss.st.com>
References: <20220518064648.1843664-1-patrice.chotard@foss.st.com>
MIME-Version: 1.0
X-Originating-IP: [10.75.127.45]
X-ClientProxiedBy: SFHDAG2NODE2.st.com (10.75.127.5) To SHFDAG1NODE1.st.com
 (10.75.129.69)
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.874,Hydra:6.0.486,FMLib:17.11.64.514
 definitions=2022-05-18_02,2022-05-17_02,2022-02-23_01
Cc: Vignesh R <vigneshr@ti.com>, Sean Anderson <seanga2@gmail.com>,
 Joe Hershberger <joe.hershberger@ni.com>,
 Chaitanya Sakinam <chaitanya.sakinam@nxp.com>,
 U-Boot STM32 <uboot-stm32@st-md-mailman.stormreply.com>,
 Stefan Roese <sr@denx.de>, Marek Vasut <marex@denx.de>,
 Heinrich Schuchardt <xypron.glpk@gmx.de>, Lukasz Majewski <lukma@denx.de>,
 Marek Behun <marek.behun@nic.cz>, Ramon Fried <rfried.dev@gmail.com>,
 Jagan Teki <jagan@amarulasolutions.com>,
 Konstantin Porotchkin <kostap@marvell.com>, Biwen Li <biwen.li@nxp.com>,
 Wolfgang Denk <wd@denx.de>, Anji J <anji.jagarlmudi@nxp.com>,
 Jassi Brar <jaswinder.singh@linaro.org>, Igal Liberman <igall@marvell.com>,
 Priyanka Jain <priyanka.jain@nxp.com>, Simon Glass <sjg@chromium.org>,
 Patrick DELAUNAY <patrick.delaunay@foss.st.com>, Bin Meng <bmeng.cn@gmail.com>,
 =?UTF-8?q?Pali=20Roh=C3=A1r?= <pali@kernel.org>,
 Pratyush Yadav <p.yadav@ti.com>
Subject: [Uboot-stm32] [RESEND PATCH v4 2/3] spi: spi_flash_probe_bus_cs()
	rely on DT for spi speed and mode
X-BeenThere: uboot-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <uboot-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/uboot-stm32/>
List-Post: <mailto:uboot-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: uboot-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Uboot-stm32" <uboot-stm32-bounces@st-md-mailman.stormreply.com>

Tm93LCBzcGlfZmxhc2hfcHJvYmVfYnVzX2NzKCkgcmVsaWVzIG9uIERUIGZvciBzcGkgc3BlZWQg
YW5kIG1vZGUKYW5kIGxvZ2ljYWxseSBjYWxscyBzcGlfZ2V0X2J1c19hbmRfY3MoKS4gSW4gY2Fz
ZSBzcGkgbW9kZSBhbmQgc3BlZWQgYXJlCm5vdCByZWFkIGZyb20gRFQsIG1ha2UgdXNhZ2Ugb2Yg
c3BpX2ZsYXNoX3Byb2JlKCkgaW5zdGVhZC4KClRvIHN1bS11cDoKIC0gUHJldmlvdXMgY2FsbCB0
cmVlIHdhczoKICAgIHNwaV9mbGFzaF9wcm9iZSgpIC0+IHNwaV9mbGFzaF9wcm9iZV9idXNfY3Mo
KSAtPiBzcGlfZ2V0X2J1c19hbmRfY3MoKQoKIC0gQ3VycmVudCBjYWxsIHRyZWUgaXM6CiAgICBz
cGlfZmxhc2hfcHJvYmUoKSAtPiBfc3BpX2dldF9idXNfYW5kX2NzKCkKICAgIHNwaV9mbGFzaF9w
cm9iZV9idXNfY3MoKSAtPiBzcGlfZ2V0X2J1c19hbmRfY3MoKQoKVGhpcyBwYXRjaCBpbXBhY3Rz
IHRoZSBmb2xsb3dpbmcgOgogIC0gY21kL3NmLmM6IGlmIHNwaSBtb2RlIGFuZC9vciBzcGVlZCBp
cyBwYXNzZWQgaW4gYXJndW1lbnQgb2YKICAgIGRvX3NwaV9mbGFzaF9wcm9iZSgpLCBjYWxsIHNw
aV9mbGFzaF9wcm9iZSgpIG90aGVyd2lzZSBjYWxsCiAgICBzcGlfZmxhc2hfcHJvYmVfYnVzX2Nz
KCkuCgogIC0gZHJpdmVycy9uZXQvZm0vZm0uYzogYXMgYnkgZGVmYXVsdCBzcGkgc3BlZWQgYW5k
IG1vZGUgd2FzIHNldCB0bwogICAgMCBhbmQgYSBjb21tZW50IGluZGljYXRlcyB0aGF0IHNwZWVk
IGFuZCBtb2RlIGFyZSByZWFkIGZyb20gRFQsCiAgICB1c2Ugc3BpX2ZsYXNoX3Byb2JlX2J1c19j
cygpLgoKICAtIGRyaXZlcnMvbmV0L3BmZV9ldGgvcGZlX2Zpcm13YXJlLmM6IHNwaSBzcGVlZCBh
bmQgbW9kZSBhcmUgbm90IHJlYWQKICAgIGZyb20gRFQgYnkgYWxsIHBsYXRmb3JtcyB1c2luZyB0
aGlzIGRyaXZlciwgc28ga2VlcCBsZWdhY3kgYW5kIHJlcGxhY2UKICAgIHNwaV9mbGFzaF9wcm9i
ZV9idXNfY3MoKSBieSBzcGlfZmxhc2hfcHJvYmUoKTsKCiAgLSBkcml2ZXJzL25ldC9zbmlfbmV0
c2VjLmMgOiBzcGkgc3BlZWQgYW5kIG1vZGUgYXJlIG5vdCByZWFkIGZyb20gRFQsCiAgICBzbyBy
ZXBsYWNlIHNwaV9mbGFzaF9wcm9iZV9idXNfY3MoKSBieSBzcGlfZmxhc2hfcHJvYmUoKS4KCiAg
LSBkcml2ZXJzL3VzYi9nYWRnZXQvbWF4MzQyMF91ZGMuYzogQ2FuJ3QgZmluZCBhbnkgcGxhdGZv
cm0gd2hpY2ggbWFrZQogICAgdXNhZ2Ugb2YgdGhpcyBkcml2ZXIsIG5ldmVydGhlbGVzcywga2Vl
cCBsZWdhY3kgYW5kIHJlcGxhY2UKICAgIHNwaV9nZXRfYnVzX2FuZF9jcygpIGJ5IF9zcGlfZ2V0
X2J1c19hbmRfY3MoKS4KCiAgLSBlbnYvc2YuYzogYSBjb21tZW50IGluZGljYXRlcyB0aGF0IHNw
ZWVkIGFuZCBtb2RlIGFyZSByZWFkCiAgICBmcm9tIERULiBTbyB1c2Ugc3BpX2ZsYXNoX3Byb2Jl
X2J1c19jcygpLgoKU2lnbmVkLW9mZi1ieTogUGF0cmljZSBDaG90YXJkIDxwYXRyaWNlLmNob3Rh
cmRAZm9zcy5zdC5jb20+CgpDYzogTWFyZWsgQmVodW4gPG1hcmVrLmJlaHVuQG5pYy5jej4KQ2M6
IEphZ2FuIFRla2kgPGphZ2FuQGFtYXJ1bGFzb2x1dGlvbnMuY29tPgpDYzogVmlnbmVzaCBSIDx2
aWduZXNockB0aS5jb20+CkNjOiBKb2UgSGVyc2hiZXJnZXIgPGpvZS5oZXJzaGJlcmdlckBuaS5j
b20+CkNjOiBSYW1vbiBGcmllZCA8cmZyaWVkLmRldkBnbWFpbC5jb20+CkNjOiBMdWthc3ogTWFq
ZXdza2kgPGx1a21hQGRlbnguZGU+CkNjOiBNYXJlayBWYXN1dCA8bWFyZXhAZGVueC5kZT4KQ2M6
IFdvbGZnYW5nIERlbmsgPHdkQGRlbnguZGU+CkNjOiBTaW1vbiBHbGFzcyA8c2pnQGNocm9taXVt
Lm9yZz4KQ2M6IFN0ZWZhbiBSb2VzZSA8c3JAZGVueC5kZT4KQ2M6ICJQYWxpIFJvaMOhciIgPHBh
bGlAa2VybmVsLm9yZz4KQ2M6IEtvbnN0YW50aW4gUG9yb3RjaGtpbiA8a29zdGFwQG1hcnZlbGwu
Y29tPgpDYzogSWdhbCBMaWJlcm1hbiA8aWdhbGxAbWFydmVsbC5jb20+CkNjOiBCaW4gTWVuZyA8
Ym1lbmcuY25AZ21haWwuY29tPgpDYzogUHJhdHl1c2ggWWFkYXYgPHAueWFkYXZAdGkuY29tPgpD
YzogU2VhbiBBbmRlcnNvbiA8c2VhbmdhMkBnbWFpbC5jb20+CkNjOiBBbmppIEogPGFuamkuamFn
YXJsbXVkaUBueHAuY29tPgpDYzogQml3ZW4gTGkgPGJpd2VuLmxpQG54cC5jb20+CkNjOiBQcml5
YW5rYSBKYWluIDxwcml5YW5rYS5qYWluQG54cC5jb20+CkNjOiBDaGFpdGFueWEgU2FraW5hbSA8
Y2hhaXRhbnlhLnNha2luYW1AbnhwLmNvbT4KLS0tCgpDaGFuZ2VzIGluIHY0OgogIC0gU3BsaXQg
cHJldmlvdXMgc2VyaWVzIGluIDMgcGF0Y2hlcwogIC0gVXBkYXRlIGNvbW1pdCBtZXNzYWdlIHdp
dGggYWRkaXRpb25uYWwgaW5mb3JtYXRpb24KCkNoYW5nZXMgaW4gdjM6CiAgLSBVcGRhdGUgY29t
bWl0IGhlYWRlciB0byByZWZsZWN0IHdoYXQgdGhlIHBhdGNoIHJlYWxseSBkby4KICAtIFJlbmFt
ZSBsZWdhY3kgc3BpX2dldF9idXNfYW5kX2NzKCkgdG8gX3NwaV9nZXRfYnVzX2FuZF9jcygpLgog
IC0gTmV3IHNwaV9nZXRfYnVzX2FuZF9jcygpIHJlbHkgb24gRFQgZm9yIHNwaSBzcGVlZCBhbmQg
bW9kZSB2YWx1ZXMuCiAgLSBzcGlfZmxhc2hfcHJvYmVfYnVzX2NzKCkgcmVseSBhbHNvIG9uIERU
IGZvciBzcGkgYW5kIG1vZGUgdmFsdWVzLgoKQ2hhbmdlcyBpbiB2MjoKICAtIGFkZCBzcGlfZmxh
c2hfcHJvYmVfYnVzX2NzX2RlZmF1bHQoKSB3aGljaCBjYWxscyBzcGlfZ2V0X2J1c19hbmRfY3Mo
KQogICAgd2l0aCAidXNlX2R0IiBwYXJhbSBzZXQgdG8gdHJ1ZSwgd2hlcmVhcyBzcGlfZmxhc2hf
cHJvYmVfYnVzX2NzKCkgY2FsbHMKICAgIHNwaV9nZXRfYnVzX2FuZF9jcygpIHdpdGggInVzZV9k
dCIgcGFyYW0gc2V0IHRvIHRydWUuCgogY21kL3NmLmMgICAgICAgICAgICAgICAgICAgICAgICAg
ICB8IDE1ICsrKysrKysrKystLS0tCiBkcml2ZXJzL210ZC9zcGkvc2YtdWNsYXNzLmMgICAgICAg
IHwgMzMgKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL25ldC9mbS9mbS5j
ICAgICAgICAgICAgICAgIHwgIDQgKystLQogZHJpdmVycy9uZXQvcGZlX2V0aC9wZmVfZmlybXdh
cmUuYyB8IDE5ICsrKystLS0tLS0tLS0tLS0tCiBkcml2ZXJzL25ldC9zbmlfbmV0c2VjLmMgICAg
ICAgICAgIHwgIDYgKystLS0tCiBlbnYvc2YuYyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwg
IDEgLQogaW5jbHVkZS9zcGlfZmxhc2guaCAgICAgICAgICAgICAgICB8ICAxIC0KIDcgZmlsZXMg
Y2hhbmdlZCwgMzYgaW5zZXJ0aW9ucygrKSwgNDMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
Y21kL3NmLmMgYi9jbWQvc2YuYwppbmRleCA4YmRlYmQ5ZmQ4Li44NzEzNzM2YjJhIDEwMDY0NAot
LS0gYS9jbWQvc2YuYworKysgYi9jbWQvc2YuYwpAQCAtOTEsNiArOTEsNyBAQCBzdGF0aWMgaW50
IGRvX3NwaV9mbGFzaF9wcm9iZShpbnQgYXJnYywgY2hhciAqY29uc3QgYXJndltdKQogCXVuc2ln
bmVkIGludCBzcGVlZCA9IENPTkZJR19TRl9ERUZBVUxUX1NQRUVEOwogCXVuc2lnbmVkIGludCBt
b2RlID0gQ09ORklHX1NGX0RFRkFVTFRfTU9ERTsKIAljaGFyICplbmRwOworCWJvb2wgdXNlX2R0
ID0gdHJ1ZTsKICNpZiBDT05GSUdfSVNfRU5BQkxFRChETV9TUElfRkxBU0gpCiAJc3RydWN0IHVk
ZXZpY2UgKm5ldywgKmJ1c19kZXY7CiAJaW50IHJldDsKQEAgLTExNywxMSArMTE4LDEzIEBAIHN0
YXRpYyBpbnQgZG9fc3BpX2ZsYXNoX3Byb2JlKGludCBhcmdjLCBjaGFyICpjb25zdCBhcmd2W10p
CiAJCXNwZWVkID0gc2ltcGxlX3N0cnRvdWwoYXJndlsyXSwgJmVuZHAsIDApOwogCQlpZiAoKmFy
Z3ZbMl0gPT0gMCB8fCAqZW5kcCAhPSAwKQogCQkJcmV0dXJuIC0xOworCQl1c2VfZHQgPSBmYWxz
ZTsKIAl9CiAJaWYgKGFyZ2MgPj0gNCkgewogCQltb2RlID0gaGV4dG91bChhcmd2WzNdLCAmZW5k
cCk7CiAJCWlmICgqYXJndlszXSA9PSAwIHx8ICplbmRwICE9IDApCiAJCQlyZXR1cm4gLTE7CisJ
CXVzZV9kdCA9IGZhbHNlOwogCX0KIAogI2lmIENPTkZJR19JU19FTkFCTEVEKERNX1NQSV9GTEFT
SCkKQEAgLTEzMSwxNCArMTM0LDE4IEBAIHN0YXRpYyBpbnQgZG9fc3BpX2ZsYXNoX3Byb2JlKGlu
dCBhcmdjLCBjaGFyICpjb25zdCBhcmd2W10pCiAJCWRldmljZV9yZW1vdmUobmV3LCBETV9SRU1P
VkVfTk9STUFMKTsKIAl9CiAJZmxhc2ggPSBOVUxMOwotCXJldCA9IHNwaV9mbGFzaF9wcm9iZV9i
dXNfY3MoYnVzLCBjcywgc3BlZWQsIG1vZGUsICZuZXcpOwotCWlmIChyZXQpIHsKKwlpZiAodXNl
X2R0KSB7CisJCXNwaV9mbGFzaF9wcm9iZV9idXNfY3MoYnVzLCBjcywgJm5ldyk7CisJCWZsYXNo
ID0gZGV2X2dldF91Y2xhc3NfcHJpdihuZXcpOworCX0gZWxzZSB7CisJCWZsYXNoID0gc3BpX2Zs
YXNoX3Byb2JlKGJ1cywgY3MsIHNwZWVkLCBtb2RlKTsKKwl9CisKKwlpZiAoIWZsYXNoKSB7CiAJ
CXByaW50ZigiRmFpbGVkIHRvIGluaXRpYWxpemUgU1BJIGZsYXNoIGF0ICV1OiV1IChlcnJvciAl
ZClcbiIsCiAJCSAgICAgICBidXMsIGNzLCByZXQpOwogCQlyZXR1cm4gMTsKIAl9Ci0KLQlmbGFz
aCA9IGRldl9nZXRfdWNsYXNzX3ByaXYobmV3KTsKICNlbHNlCiAJaWYgKGZsYXNoKQogCQlzcGlf
Zmxhc2hfZnJlZShmbGFzaCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL210ZC9zcGkvc2YtdWNsYXNz
LmMgYi9kcml2ZXJzL210ZC9zcGkvc2YtdWNsYXNzLmMKaW5kZXggYjQ1YmE1NGViZi4uZTZlNjUw
ZWY4YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9tdGQvc3BpL3NmLXVjbGFzcy5jCisrKyBiL2RyaXZl
cnMvbXRkL3NwaS9zZi11Y2xhc3MuYwpAQCAtNDYsMjUgKzQ2LDEyIEBAIGludCBzcGxfZmxhc2hf
Z2V0X3N3X3dyaXRlX3Byb3Qoc3RydWN0IHVkZXZpY2UgKmRldikKICAqIFRPRE8oc2pnQGNocm9t
aXVtLm9yZyk6IFRoaXMgaXMgYW4gb2xkLXN0eWxlIGZ1bmN0aW9uLiBXZSBzaG91bGQgcmVtb3Zl
CiAgKiBpdCB3aGVuIGFsbCBTUEkgZmxhc2ggZHJpdmVycyB1c2UgZG0KICAqLwotc3RydWN0IHNw
aV9mbGFzaCAqc3BpX2ZsYXNoX3Byb2JlKHVuc2lnbmVkIGludCBidXMsIHVuc2lnbmVkIGludCBj
cywKK3N0cnVjdCBzcGlfZmxhc2ggKnNwaV9mbGFzaF9wcm9iZSh1bnNpZ25lZCBpbnQgYnVzbnVt
LCB1bnNpZ25lZCBpbnQgY3MsCiAJCQkJICB1bnNpZ25lZCBpbnQgbWF4X2h6LCB1bnNpZ25lZCBp
bnQgc3BpX21vZGUpCi17Ci0Jc3RydWN0IHVkZXZpY2UgKmRldjsKLQotCWlmIChzcGlfZmxhc2hf
cHJvYmVfYnVzX2NzKGJ1cywgY3MsIG1heF9oeiwgc3BpX21vZGUsICZkZXYpKQotCQlyZXR1cm4g
TlVMTDsKLQotCXJldHVybiBkZXZfZ2V0X3VjbGFzc19wcml2KGRldik7Ci19Ci0KLWludCBzcGlf
Zmxhc2hfcHJvYmVfYnVzX2NzKHVuc2lnbmVkIGludCBidXNudW0sIHVuc2lnbmVkIGludCBjcywK
LQkJCSAgIHVuc2lnbmVkIGludCBtYXhfaHosIHVuc2lnbmVkIGludCBzcGlfbW9kZSwKLQkJCSAg
IHN0cnVjdCB1ZGV2aWNlICoqZGV2cCkKIHsKIAlzdHJ1Y3Qgc3BpX3NsYXZlICpzbGF2ZTsKIAlz
dHJ1Y3QgdWRldmljZSAqYnVzOwogCWNoYXIgKnN0cjsKLQlpbnQgcmV0OwogCiAjaWYgZGVmaW5l
ZChDT05GSUdfU1BMX0JVSUxEKSAmJiBDT05GSUdfSVNfRU5BQkxFRChVU0VfVElOWV9QUklOVEYp
CiAJc3RyID0gInNwaV9mbGFzaCI7CkBAIC03NCw4ICs2MSwyMiBAQCBpbnQgc3BpX2ZsYXNoX3By
b2JlX2J1c19jcyh1bnNpZ25lZCBpbnQgYnVzbnVtLCB1bnNpZ25lZCBpbnQgY3MsCiAJc25wcmlu
dGYobmFtZSwgc2l6ZW9mKG5hbWUpLCAic3BpX2ZsYXNoQCVkOiVkIiwgYnVzbnVtLCBjcyk7CiAJ
c3RyID0gc3RyZHVwKG5hbWUpOwogI2VuZGlmCi0JcmV0ID0gX3NwaV9nZXRfYnVzX2FuZF9jcyhi
dXNudW0sIGNzLCBtYXhfaHosIHNwaV9tb2RlLAotCQkJCSAgImplZGVjX3NwaV9ub3IiLCBzdHIs
ICZidXMsICZzbGF2ZSk7CisKKwlpZiAoX3NwaV9nZXRfYnVzX2FuZF9jcyhidXNudW0sIGNzLCBt
YXhfaHosIHNwaV9tb2RlLAorCQkJCSJqZWRlY19zcGlfbm9yIiwgc3RyLCAmYnVzLCAmc2xhdmUp
KQorCQlyZXR1cm4gTlVMTDsKKworCXJldHVybiBkZXZfZ2V0X3VjbGFzc19wcml2KHNsYXZlLT5k
ZXYpOworfQorCitpbnQgc3BpX2ZsYXNoX3Byb2JlX2J1c19jcyh1bnNpZ25lZCBpbnQgYnVzbnVt
LCB1bnNpZ25lZCBpbnQgY3MsCisJCQkgICBzdHJ1Y3QgdWRldmljZSAqKmRldnApCit7CisJc3Ry
dWN0IHNwaV9zbGF2ZSAqc2xhdmU7CisJc3RydWN0IHVkZXZpY2UgKmJ1czsKKwlpbnQgcmV0Owor
CisJcmV0ID0gc3BpX2dldF9idXNfYW5kX2NzKGJ1c251bSwgY3MsICZidXMsICZzbGF2ZSk7CiAJ
aWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZm0vZm0u
YyBiL2RyaXZlcnMvbmV0L2ZtL2ZtLmMKaW5kZXggZjgyNTYxMjY0MC4uZDBiNDkyYjVhMSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9uZXQvZm0vZm0uYworKysgYi9kcml2ZXJzL25ldC9mbS9mbS5jCkBA
IC0zODgsNyArMzg4LDcgQEAgaW50IGZtX2luaXRfY29tbW9uKGludCBpbmRleCwgc3RydWN0IGNj
c3JfZm1hbiAqcmVnKQogCiAJCS8qIHNwZWVkIGFuZCBtb2RlIHdpbGwgYmUgcmVhZCBmcm9tIERU
ICovCiAJCXJldCA9IHNwaV9mbGFzaF9wcm9iZV9idXNfY3MoQ09ORklHX1NGX0RFRkFVTFRfQlVT
LAotCQkJCQkgICAgIENPTkZJR19TRl9ERUZBVUxUX0NTLCAwLCAwLCAmbmV3KTsKKwkJCQkJICAg
ICBDT05GSUdfU0ZfREVGQVVMVF9DUywgJm5ldyk7CiAKIAkJdWNvZGVfZmxhc2ggPSBkZXZfZ2V0
X3VjbGFzc19wcml2KG5ldyk7CiAjZWxzZQpAQCAtNDc1LDcgKzQ3NSw3IEBAIGludCBmbV9pbml0
X2NvbW1vbihpbnQgaW5kZXgsIHN0cnVjdCBjY3NyX2ZtYW4gKnJlZykKIAogCS8qIHNwZWVkIGFu
ZCBtb2RlIHdpbGwgYmUgcmVhZCBmcm9tIERUICovCiAJcmV0ID0gc3BpX2ZsYXNoX3Byb2JlX2J1
c19jcyhDT05GSUdfU0ZfREVGQVVMVF9CVVMsIENPTkZJR19TRl9ERUZBVUxUX0NTLAotCQkJCSAg
ICAgMCwgMCwgJm5ldyk7CisJCQkJICAgICAmbmV3KTsKIAogCXVjb2RlX2ZsYXNoID0gZGV2X2dl
dF91Y2xhc3NfcHJpdihuZXcpOwogI2Vsc2UKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L3BmZV9l
dGgvcGZlX2Zpcm13YXJlLmMgYi9kcml2ZXJzL25ldC9wZmVfZXRoL3BmZV9maXJtd2FyZS5jCmlu
ZGV4IDY2NjkwNDgxODEuLjgyYTRhYTg5YTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L3BmZV9l
dGgvcGZlX2Zpcm13YXJlLmMKKysrIGIvZHJpdmVycy9uZXQvcGZlX2V0aC9wZmVfZmlybXdhcmUu
YwpAQCAtMTcyLDMxICsxNzIsMjAgQEAgc3RhdGljIGludCBwZmVfZml0X2NoZWNrKHZvaWQpCiBp
bnQgcGZlX3NwaV9mbGFzaF9pbml0KHZvaWQpCiB7CiAJc3RydWN0IHNwaV9mbGFzaCAqcGZlX2Zs
YXNoOwotCXN0cnVjdCB1ZGV2aWNlICpuZXc7CiAJaW50IHJldCA9IDA7CiAJdm9pZCAqYWRkciA9
IG1hbGxvYyhDT05GSUdfU1lTX0xTX1BGRV9GV19MRU5HVEgpOwogCiAJaWYgKCFhZGRyKQogCQly
ZXR1cm4gLUVOT01FTTsKIAotCXJldCA9IHNwaV9mbGFzaF9wcm9iZV9idXNfY3MoQ09ORklHX1NZ
U19GU0xfUEZFX1NQSV9CVVMsCi0JCQkJICAgICBDT05GSUdfU1lTX0ZTTF9QRkVfU1BJX0NTLAot
CQkJCSAgICAgQ09ORklHX1NZU19GU0xfUEZFX1NQSV9NQVhfSFosCi0JCQkJICAgICBDT05GSUdf
U1lTX0ZTTF9QRkVfU1BJX01PREUsCi0JCQkJICAgICAmbmV3KTsKLQlpZiAocmV0KSB7Ci0JCXBy
aW50ZigiU0Y6IGZhaWxlZCB0byBwcm9iZSBzcGlcbiIpOwotCQlmcmVlKGFkZHIpOwotCQlkZXZp
Y2VfcmVtb3ZlKG5ldywgRE1fUkVNT1ZFX05PUk1BTCk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCisJ
cGZlX2ZsYXNoID0gc3BpX2ZsYXNoX3Byb2JlKENPTkZJR19TWVNfRlNMX1BGRV9TUElfQlVTLAor
CQkJCSAgICBDT05GSUdfU1lTX0ZTTF9QRkVfU1BJX0NTLAorCQkJCSAgICBDT05GSUdfU1lTX0ZT
TF9QRkVfU1BJX01BWF9IWiwKKwkJCQkgICAgQ09ORklHX1NZU19GU0xfUEZFX1NQSV9NT0RFKTsK
IAotCXBmZV9mbGFzaCA9IGRldl9nZXRfdWNsYXNzX3ByaXYobmV3KTsKIAlpZiAoIXBmZV9mbGFz
aCkgewogCQlwcmludGYoIlNGOiBwcm9iZSBmb3IgcGZlIGZhaWxlZFxuIik7CiAJCWZyZWUoYWRk
cik7Ci0JCWRldmljZV9yZW1vdmUobmV3LCBETV9SRU1PVkVfTk9STUFMKTsKIAkJcmV0dXJuIC1F
Tk9ERVY7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9zbmlfbmV0c2VjLmMgYi9kcml2
ZXJzL25ldC9zbmlfbmV0c2VjLmMKaW5kZXggMjRjYWFjZjg0Ny4uOTc4MGYyMDkyYiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9uZXQvc25pX25ldHNlYy5jCisrKyBiL2RyaXZlcnMvbmV0L3NuaV9uZXRz
ZWMuYwpAQCAtNjIxLDEyICs2MjEsMTAgQEAgc3RhdGljIGludCBuZXRzZWNfc3RvcF9nbWFjKHN0
cnVjdCBuZXRzZWNfcHJpdiAqcHJpdikKIAogc3RhdGljIHZvaWQgbmV0c2VjX3NwaV9yZWFkKGNo
YXIgKmJ1ZiwgbG9mZl90IGxlbiwgbG9mZl90IG9mZnNldCkKIHsKLQlzdHJ1Y3QgdWRldmljZSAq
bmV3OwogCXN0cnVjdCBzcGlfZmxhc2ggKmZsYXNoOwogCi0Jc3BpX2ZsYXNoX3Byb2JlX2J1c19j
cyhDT05GSUdfU0ZfREVGQVVMVF9CVVMsIENPTkZJR19TRl9ERUZBVUxUX0NTLAotCQkJICAgICAg
IENPTkZJR19TRl9ERUZBVUxUX1NQRUVELCBDT05GSUdfU0ZfREVGQVVMVF9NT0RFLCAmbmV3KTsK
LQlmbGFzaCA9IGRldl9nZXRfdWNsYXNzX3ByaXYobmV3KTsKKwlmbGFzaCA9IHNwaV9mbGFzaF9w
cm9iZShDT05GSUdfU0ZfREVGQVVMVF9CVVMsIENPTkZJR19TRl9ERUZBVUxUX0NTLAorCQkJCUNP
TkZJR19TRl9ERUZBVUxUX1NQRUVELCBDT05GSUdfU0ZfREVGQVVMVF9NT0RFKTsKIAogCXNwaV9m
bGFzaF9yZWFkKGZsYXNoLCBvZmZzZXQsIGxlbiwgYnVmKTsKIH0KZGlmZiAtLWdpdCBhL2Vudi9z
Zi5jIGIvZW52L3NmLmMKaW5kZXggZDJjMDdjZDcxNi4uNGI3Njg1NDJjMSAxMDA2NDQKLS0tIGEv
ZW52L3NmLmMKKysrIGIvZW52L3NmLmMKQEAgLTQ4LDcgKzQ4LDYgQEAgc3RhdGljIGludCBzZXR1
cF9mbGFzaF9kZXZpY2Uoc3RydWN0IHNwaV9mbGFzaCAqKmVudl9mbGFzaCkKIAogCS8qIHNwZWVk
IGFuZCBtb2RlIHdpbGwgYmUgcmVhZCBmcm9tIERUICovCiAJcmV0ID0gc3BpX2ZsYXNoX3Byb2Jl
X2J1c19jcyhDT05GSUdfRU5WX1NQSV9CVVMsIENPTkZJR19FTlZfU1BJX0NTLAotCQkJCSAgICAg
Q09ORklHX0VOVl9TUElfTUFYX0haLCBDT05GSUdfRU5WX1NQSV9NT0RFLAogCQkJCSAgICAgJm5l
dyk7CiAJaWYgKHJldCkgewogCQllbnZfc2V0X2RlZmF1bHQoInNwaV9mbGFzaF9wcm9iZV9idXNf
Y3MoKSBmYWlsZWQiLCAwKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvc3BpX2ZsYXNoLmggYi9pbmNs
dWRlL3NwaV9mbGFzaC5oCmluZGV4IGQzM2QwZGQ0NmEuLjEwZDE5ZmQ0YjEgMTAwNjQ0Ci0tLSBh
L2luY2x1ZGUvc3BpX2ZsYXNoLmgKKysrIGIvaW5jbHVkZS9zcGlfZmxhc2guaApAQCAtMTAyLDcg
KzEwMiw2IEBAIGludCBzcGxfZmxhc2hfZ2V0X3N3X3dyaXRlX3Byb3Qoc3RydWN0IHVkZXZpY2Ug
KmRldik7CiBpbnQgc3BpX2ZsYXNoX3N0ZF9wcm9iZShzdHJ1Y3QgdWRldmljZSAqZGV2KTsKIAog
aW50IHNwaV9mbGFzaF9wcm9iZV9idXNfY3ModW5zaWduZWQgaW50IGJ1c251bSwgdW5zaWduZWQg
aW50IGNzLAotCQkJICAgdW5zaWduZWQgaW50IG1heF9oeiwgdW5zaWduZWQgaW50IHNwaV9tb2Rl
LAogCQkJICAgc3RydWN0IHVkZXZpY2UgKipkZXZwKTsKIAogLyogQ29tcGF0aWJpbGl0eSBmdW5j
dGlvbiAtIHRoaXMgaXMgdGhlIG9sZCBVLUJvb3QgQVBJICovCi0tIAoyLjI1LjEKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClVib290LXN0bTMyIG1haWxp
bmcgbGlzdApVYm9vdC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8v
c3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xpc3RpbmZvL3Vib290LXN0bTMy
Cg==
