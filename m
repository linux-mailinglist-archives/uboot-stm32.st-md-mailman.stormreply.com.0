Return-Path: <uboot-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+uboot-stm32@lfdr.de
Delivered-To: lists+uboot-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 84582B1B2C
	for <lists+uboot-stm32@lfdr.de>; Fri, 13 Sep 2019 11:53:44 +0200 (CEST)
Received: from ip-172-31-3-76.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 583F6C35E08
	for <lists+uboot-stm32@lfdr.de>; Fri, 13 Sep 2019 09:53:43 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx08-00178001.pphosted.com
 [91.207.212.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 94984C36B3E
 for <uboot-stm32@st-md-mailman.stormreply.com>;
 Fri, 13 Sep 2019 09:48:43 +0000 (UTC)
Received: from pps.filterd (m0046661.ppops.net [127.0.0.1])
 by mx08-00178001.pphosted.com (8.16.0.42/8.16.0.42) with SMTP id
 x8D9jnX6018750; Fri, 13 Sep 2019 11:48:37 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=st.com;
 h=from : to : subject :
 date : message-id : in-reply-to : references : mime-version : content-type
 : content-transfer-encoding; s=STMicroelectronics;
 bh=OzW1sd5iDYbOZuGM93WDlbKgotff4WMNtzqFv1QRp+w=;
 b=scktjb0tr+90zj81R+UBBKhRr6mDAlNUt+Cot7Z53sI5BpvlyRWlKXfm5kioVZIl7rxs
 7vACd48rhPFCTPwPQK63qeEB5aiA9ZJyWRo9D1Es6mhn1ixxvHKV3gX6dRiBrtYRB9PT
 U6zBaoTiQPrJRy8IO0k8lEfT/sVycKM9F/2OckOxEzCbkX1y2mZ+SbyKXyl8QZ/+DvVo
 1rcG2UgtzhRMB2+c0TVKM4P9Hh02oUqm200iYQRQy4h04AfvuFGwOj26fJj78e7gqjKq
 mUp3XBs1wGTqxvriN3/VEdoThz2NzEDWwHiScvmT61rGAnG97Ankpu7XeHJHD+PaWHTb Dg== 
Received: from beta.dmz-ap.st.com (beta.dmz-ap.st.com [138.198.100.35])
 by mx08-00178001.pphosted.com with ESMTP id 2uyte3v52t-1
 (version=TLSv1 cipher=ECDHE-RSA-AES256-SHA bits=256 verify=NOT);
 Fri, 13 Sep 2019 11:48:37 +0200
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-ap.st.com (STMicroelectronics) with ESMTP id AFFC122;
 Fri, 13 Sep 2019 09:48:33 +0000 (GMT)
Received: from Webmail-eu.st.com (Safex1hubcas23.st.com [10.75.90.46])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 1D07D2BB882;
 Fri, 13 Sep 2019 11:48:33 +0200 (CEST)
Received: from SAFEX1HUBCAS21.st.com (10.75.90.45) by SAFEX1HUBCAS23.st.com
 (10.75.90.46) with Microsoft SMTP Server (TLS) id 14.3.439.0; Fri, 13 Sep
 2019 11:48:32 +0200
Received: from localhost (10.201.23.97) by Webmail-ga.st.com (10.75.90.48)
 with Microsoft SMTP Server (TLS) id 14.3.439.0; Fri, 13 Sep 2019 11:48:31
 +0200
From: =?UTF-8?q?Yannick=20Fertr=C3=A9?= <yannick.fertre@st.com>
To: Vikas Manocha <vikas.manocha@st.com>, Benjamin Gaignard
 <benjamin.gaignard@st.com>, Albert Aribaud <albert.u.boot@aribaud.net>,
 Patrick Delaunay <patrick.delaunay@st.com>,
 Simon Glass <sjg@chromium.org>, Anatolij Gustschin <agust@denx.de>,
 Patrice Chotard <patrice.chotard@st.com>,
 =?UTF-8?q?Yannick=20Fertr=C3=A9?= <yannick.fertre@st.com>, Philippe Cornu
 <philippe.cornu@st.com>, Jens Wiklander <jens.wiklander@linaro.org>, "Eugen
 Hristev" <eugen.hristev@microchip.com>, Heinrich Schuchardt
 <xypron.glpk@gmx.de>, Simon Goldschmidt <simon.k.r.goldschmidt@gmail.com>,
 <u-boot@lists.denx.de>, <uboot-stm32@st-md-mailman.stormreply.com>
Date: Fri, 13 Sep 2019 11:47:52 +0200
Message-ID: <1568368083-11075-5-git-send-email-yannick.fertre@st.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1568368083-11075-1-git-send-email-yannick.fertre@st.com>
References: <1568368083-11075-1-git-send-email-yannick.fertre@st.com>
MIME-Version: 1.0
X-Originating-IP: [10.201.23.97]
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:6.0.70,1.0.8
 definitions=2019-09-13_05:2019-09-11,2019-09-13 signatures=0
X-Mailman-Approved-At: Fri, 13 Sep 2019 09:53:41 +0000
Subject: [Uboot-stm32] [PATCH v4 04/15] video: add support of MIPI DSI
	interface
X-BeenThere: uboot-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <uboot-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/uboot-stm32/>
List-Post: <mailto:uboot-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: uboot-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Uboot-stm32" <uboot-stm32-bounces@st-md-mailman.stormreply.com>

TWlwaV9kaXNwbGF5LmMgY29udGFpbnMgYSBzZXQgb2YgZHNpIGhlbHBlcnMuClRoaXMgZmlsZSBp
cyBhIGNvcHkgb2YgZmlsZSBkcm1fbWlwaV9kc2kuYyAobGludXgga2VybmVsKS4KClNpZ25lZC1v
ZmYtYnk6IFlhbm5pY2sgRmVydHLDqSA8eWFubmljay5mZXJ0cmVAc3QuY29tPgotLS0KIGRyaXZl
cnMvdmlkZW8vS2NvbmZpZyAgICB8ICAgOCArCiBkcml2ZXJzL3ZpZGVvL01ha2VmaWxlICAgfCAg
IDEgKwogZHJpdmVycy92aWRlby9taXBpX2RzaS5jIHwgODI4ICsrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL21pcGlfZHNpLmggICAgICAgfCA0
NjYgKysrKysrKysrKysrKysrKysrKysrKysrKysKIDQgZmlsZXMgY2hhbmdlZCwgMTMwMyBpbnNl
cnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy92aWRlby9taXBpX2RzaS5jCiBj
cmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9taXBpX2RzaS5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy92aWRlby9LY29uZmlnIGIvZHJpdmVycy92aWRlby9LY29uZmlnCmluZGV4IDI2MWZhOTguLjM2
ZjY2NmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmlkZW8vS2NvbmZpZworKysgYi9kcml2ZXJzL3Zp
ZGVvL0tjb25maWcKQEAgLTczLDYgKzczLDE0IEBAIGNvbmZpZyBWSURFT19BTlNJCiAJICBFbmFi
bGUgQU5TSSBlc2NhcGUgc2VxdWVuY2UgZGVjb2RpbmcgZm9yIGEgbW9yZSBmdWxseSBmdW5jdGlv
bmFsCiAJICBjb25zb2xlLgogCitjb25maWcgVklERU9fTUlQSV9EU0kKKwlib29sICJTdXBwb3J0
IE1JUEkgRFNJIGludGVyZmFjZSIKKwlkZXBlbmRzIG9uIERNX1ZJREVPCisJaGVscAorCSAgU3Vw
cG9ydCBNSVBJIERTSSBpbnRlcmZhY2UgZm9yIGRyaXZpbmcgYSBNSVBJIGNvbXBhdGlibGUgZGV2
aWNlLgorCSAgVGhlIE1JUEkgRGlzcGxheSBTZXJpYWwgSW50ZXJmYWNlIChNSVBJIERTSSkgZGVm
aW5lcyBhIGhpZ2gtc3BlZWQKKwkgIHNlcmlhbCBpbnRlcmZhY2UgYmV0d2VlbiBhIGhvc3QgcHJv
Y2Vzc29yIGFuZCBhIGRpc3BsYXkgbW9kdWxlLgorCiBjb25maWcgQ09OU09MRV9OT1JNQUwKIAli
b29sICJTdXBwb3J0IGEgc2ltcGxlIHRleHQgY29uc29sZSIKIAlkZXBlbmRzIG9uIERNX1ZJREVP
CmRpZmYgLS1naXQgYS9kcml2ZXJzL3ZpZGVvL01ha2VmaWxlIGIvZHJpdmVycy92aWRlby9NYWtl
ZmlsZQppbmRleCAzNDlhMjA3Li43ZGY5YjBiIDEwMDY0NAotLS0gYS9kcml2ZXJzL3ZpZGVvL01h
a2VmaWxlCisrKyBiL2RyaXZlcnMvdmlkZW8vTWFrZWZpbGUKQEAgLTUzLDYgKzUzLDcgQEAgb2Jq
LSQoQ09ORklHX1ZJREVPX0xDRF9ISVRBQ0hJX1RYMThENDJWTSkgKz0gaGl0YWNoaV90eDE4ZDQy
dm1fbGNkLm8KIG9iai0kKENPTkZJR19WSURFT19MQ0RfU1NEMjgyOCkgKz0gc3NkMjgyOC5vCiBv
YmotJChDT05GSUdfVklERU9fTUI4NjJ4eCkgKz0gbWI4NjJ4eC5vIHZpZGVvbW9kZXMubwogb2Jq
LSR7Q09ORklHX1ZJREVPX01FU09OfSArPSBtZXNvbi8KK29iai0ke0NPTkZJR19WSURFT19NSVBJ
X0RTSX0gKz0gbWlwaV9kc2kubwogb2JqLSQoQ09ORklHX1ZJREVPX01WRUJVKSArPSBtdmVidV9s
Y2Qubwogb2JqLSQoQ09ORklHX1ZJREVPX01YMykgKz0gbXgzZmIubyB2aWRlb21vZGVzLm8KIG9i
ai0kKENPTkZJR19WSURFT19NWFMpICs9IG14c2ZiLm8gdmlkZW9tb2Rlcy5vCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3ZpZGVvL21pcGlfZHNpLmMgYi9kcml2ZXJzL3ZpZGVvL21pcGlfZHNpLmMKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uY2RjM2VmNQotLS0gL2Rldi9udWxsCisr
KyBiL2RyaXZlcnMvdmlkZW8vbWlwaV9kc2kuYwpAQCAtMCwwICsxLDgyOCBAQAorLy8gU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKy8qCisgKiBNSVBJIERTSSBCdXMKKyAqCisgKiBD
b3B5cmlnaHQgKEMpIDIwMTItMjAxMywgU2Ftc3VuZyBFbGVjdHJvbmljcywgQ28uLCBMdGQuCisg
KiBDb3B5cmlnaHQgKEMpIDIwMTkgU1RNaWNyb2VsZWN0cm9uaWNzIC0gQWxsIFJpZ2h0cyBSZXNl
cnZlZAorICogQW5kcnplaiBIYWpkYSA8YS5oYWpkYUBzYW1zdW5nLmNvbT4KKyAqCisgKiBQZXJt
aXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBv
YnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3Vt
ZW50YXRpb24gZmlsZXMgKHRoZQorICogIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3
YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZworICogd2l0aG91dCBsaW1pdGF0aW9u
IHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLAorICogZGlz
dHJpYnV0ZSwgc3ViIGxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUs
IGFuZCB0bworICogcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlz
aGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvCisgKiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Cisg
KgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3Rp
Y2UgKGluY2x1ZGluZyB0aGUKKyAqIG5leHQgcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRlZCBp
biBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zCisgKiBvZiB0aGUgU29mdHdhcmUu
CisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFO
VFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9U
IExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVT
UyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVW
RU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUlMsIEFVVEhPUlMgQU5EL09SIElUUyBT
VVBQTElFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sCisgKiBEQU1BR0VTIE9SIE9USEVSIExJ
QUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IKKyAqIE9U
SEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBT
T0ZUV0FSRSBPUiBUSEUKKyAqIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUu
CisgKgorICogTWlwaV9kc2kuYyBjb250YWlucyBhIHNldCBvZiBkc2kgaGVscGVycy4KKyAqIFRo
aXMgZmlsZSBpcyBpbnNwaXJlZCBmcm9tIHRoZSBkcm0gaGVscGVyIGZpbGUgZHJpdmVycy9ncHUv
ZHJtL2RybV9taXBpX2RzaS5jCisgKiAoa2VybmVsIGxpbnV4KS4KKyAqCisgKi8KKworI2luY2x1
ZGUgPGNvbW1vbi5oPgorI2luY2x1ZGUgPGNsay5oPgorI2luY2x1ZGUgPGRpc3BsYXkuaD4KKyNp
bmNsdWRlIDxkbS5oPgorI2luY2x1ZGUgPG1pcGlfZGlzcGxheS5oPgorI2luY2x1ZGUgPG1pcGlf
ZHNpLmg+CisKKy8qKgorICogRE9DOiBkc2kgaGVscGVycworICoKKyAqIFRoZXNlIGZ1bmN0aW9u
cyBjb250YWluIHNvbWUgY29tbW9uIGxvZ2ljIGFuZCBoZWxwZXJzIHRvIGRlYWwgd2l0aCBNSVBJ
IERTSQorICogcGVyaXBoZXJhbHMuCisgKgorICogSGVscGVycyBhcmUgcHJvdmlkZWQgZm9yIGEg
bnVtYmVyIG9mIHN0YW5kYXJkIE1JUEkgRFNJIGNvbW1hbmQgYXMgd2VsbCBhcyBhCisgKiBzdWJz
ZXQgb2YgdGhlIE1JUEkgRENTIGNvbW1hbmQgc2V0LgorICovCisKKy8qKgorICogbWlwaV9kc2lf
YXR0YWNoIC0gYXR0YWNoIGEgRFNJIGRldmljZSB0byBpdHMgRFNJIGhvc3QKKyAqIEBkc2k6IERT
SSBwZXJpcGhlcmFsCisgKi8KK2ludCBtaXBpX2RzaV9hdHRhY2goc3RydWN0IG1pcGlfZHNpX2Rl
dmljZSAqZHNpKQoreworCWNvbnN0IHN0cnVjdCBtaXBpX2RzaV9ob3N0X29wcyAqb3BzID0gZHNp
LT5ob3N0LT5vcHM7CisKKwlpZiAoIW9wcyB8fCAhb3BzLT5hdHRhY2gpCisJCXJldHVybiAtRU5P
U1lTOworCisJcmV0dXJuIG9wcy0+YXR0YWNoKGRzaS0+aG9zdCwgZHNpKTsKK30KK0VYUE9SVF9T
WU1CT0wobWlwaV9kc2lfYXR0YWNoKTsKKworLyoqCisgKiBtaXBpX2RzaV9kZXRhY2ggLSBkZXRh
Y2ggYSBEU0kgZGV2aWNlIGZyb20gaXRzIERTSSBob3N0CisgKiBAZHNpOiBEU0kgcGVyaXBoZXJh
bAorICovCitpbnQgbWlwaV9kc2lfZGV0YWNoKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSkK
K3sKKwljb25zdCBzdHJ1Y3QgbWlwaV9kc2lfaG9zdF9vcHMgKm9wcyA9IGRzaS0+aG9zdC0+b3Bz
OworCisJaWYgKCFvcHMgfHwgIW9wcy0+ZGV0YWNoKQorCQlyZXR1cm4gLUVOT1NZUzsKKworCXJl
dHVybiBvcHMtPmRldGFjaChkc2ktPmhvc3QsIGRzaSk7Cit9CitFWFBPUlRfU1lNQk9MKG1pcGlf
ZHNpX2RldGFjaCk7CisKKy8qKgorICogbWlwaV9kc2lfZGV2aWNlX3RyYW5zZmVyIC0gdHJhbnNm
ZXIgbWVzc2FnZSB0byBhIERTSSBkZXZpY2UKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsCisgKiBA
bXNnOiBtZXNzYWdlCisgKi8KK3N0YXRpYyBzc2l6ZV90IG1pcGlfZHNpX2RldmljZV90cmFuc2Zl
cihzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2ksCisJCQkJCXN0cnVjdCBtaXBpX2RzaV9tc2cg
Km1zZykKK3sKKwljb25zdCBzdHJ1Y3QgbWlwaV9kc2lfaG9zdF9vcHMgKm9wcyA9IGRzaS0+aG9z
dC0+b3BzOworCisJaWYgKCFvcHMgfHwgIW9wcy0+dHJhbnNmZXIpCisJCXJldHVybiAtRU5PU1lT
OworCisJaWYgKGRzaS0+bW9kZV9mbGFncyAmIE1JUElfRFNJX01PREVfTFBNKQorCQltc2ctPmZs
YWdzIHw9IE1JUElfRFNJX01TR19VU0VfTFBNOworCisJcmV0dXJuIG9wcy0+dHJhbnNmZXIoZHNp
LT5ob3N0LCBtc2cpOworfQorCisvKioKKyAqIG1pcGlfZHNpX3BhY2tldF9mb3JtYXRfaXNfc2hv
cnQgLSBjaGVjayBpZiBhIHBhY2tldCBpcyBvZiB0aGUgc2hvcnQgZm9ybWF0CisgKiBAdHlwZTog
TUlQSSBEU0kgZGF0YSB0eXBlIG9mIHRoZSBwYWNrZXQKKyAqCisgKiBSZXR1cm46IHRydWUgaWYg
dGhlIHBhY2tldCBmb3IgdGhlIGdpdmVuIGRhdGEgdHlwZSBpcyBhIHNob3J0IHBhY2tldCwgZmFs
c2UKKyAqIG90aGVyd2lzZS4KKyAqLworYm9vbCBtaXBpX2RzaV9wYWNrZXRfZm9ybWF0X2lzX3No
b3J0KHU4IHR5cGUpCit7CisJc3dpdGNoICh0eXBlKSB7CisJY2FzZSBNSVBJX0RTSV9WX1NZTkNf
U1RBUlQ6CisJY2FzZSBNSVBJX0RTSV9WX1NZTkNfRU5EOgorCWNhc2UgTUlQSV9EU0lfSF9TWU5D
X1NUQVJUOgorCWNhc2UgTUlQSV9EU0lfSF9TWU5DX0VORDoKKwljYXNlIE1JUElfRFNJX0VORF9P
Rl9UUkFOU01JU1NJT046CisJY2FzZSBNSVBJX0RTSV9DT0xPUl9NT0RFX09GRjoKKwljYXNlIE1J
UElfRFNJX0NPTE9SX01PREVfT046CisJY2FzZSBNSVBJX0RTSV9TSFVURE9XTl9QRVJJUEhFUkFM
OgorCWNhc2UgTUlQSV9EU0lfVFVSTl9PTl9QRVJJUEhFUkFMOgorCWNhc2UgTUlQSV9EU0lfR0VO
RVJJQ19TSE9SVF9XUklURV8wX1BBUkFNOgorCWNhc2UgTUlQSV9EU0lfR0VORVJJQ19TSE9SVF9X
UklURV8xX1BBUkFNOgorCWNhc2UgTUlQSV9EU0lfR0VORVJJQ19TSE9SVF9XUklURV8yX1BBUkFN
OgorCWNhc2UgTUlQSV9EU0lfR0VORVJJQ19SRUFEX1JFUVVFU1RfMF9QQVJBTToKKwljYXNlIE1J
UElfRFNJX0dFTkVSSUNfUkVBRF9SRVFVRVNUXzFfUEFSQU06CisJY2FzZSBNSVBJX0RTSV9HRU5F
UklDX1JFQURfUkVRVUVTVF8yX1BBUkFNOgorCWNhc2UgTUlQSV9EU0lfRENTX1NIT1JUX1dSSVRF
OgorCWNhc2UgTUlQSV9EU0lfRENTX1NIT1JUX1dSSVRFX1BBUkFNOgorCWNhc2UgTUlQSV9EU0lf
RENTX1JFQUQ6CisJY2FzZSBNSVBJX0RTSV9TRVRfTUFYSU1VTV9SRVRVUk5fUEFDS0VUX1NJWkU6
CisJCXJldHVybiB0cnVlOworCX0KKworCXJldHVybiBmYWxzZTsKK30KK0VYUE9SVF9TWU1CT0wo
bWlwaV9kc2lfcGFja2V0X2Zvcm1hdF9pc19zaG9ydCk7CisKKy8qKgorICogbWlwaV9kc2lfcGFj
a2V0X2Zvcm1hdF9pc19sb25nIC0gY2hlY2sgaWYgYSBwYWNrZXQgaXMgb2YgdGhlIGxvbmcgZm9y
bWF0CisgKiBAdHlwZTogTUlQSSBEU0kgZGF0YSB0eXBlIG9mIHRoZSBwYWNrZXQKKyAqCisgKiBS
ZXR1cm46IHRydWUgaWYgdGhlIHBhY2tldCBmb3IgdGhlIGdpdmVuIGRhdGEgdHlwZSBpcyBhIGxv
bmcgcGFja2V0LCBmYWxzZQorICogb3RoZXJ3aXNlLgorICovCitib29sIG1pcGlfZHNpX3BhY2tl
dF9mb3JtYXRfaXNfbG9uZyh1OCB0eXBlKQoreworCXN3aXRjaCAodHlwZSkgeworCWNhc2UgTUlQ
SV9EU0lfTlVMTF9QQUNLRVQ6CisJY2FzZSBNSVBJX0RTSV9CTEFOS0lOR19QQUNLRVQ6CisJY2Fz
ZSBNSVBJX0RTSV9HRU5FUklDX0xPTkdfV1JJVEU6CisJY2FzZSBNSVBJX0RTSV9EQ1NfTE9OR19X
UklURToKKwljYXNlIE1JUElfRFNJX0xPT1NFTFlfUEFDS0VEX1BJWEVMX1NUUkVBTV9ZQ0JDUjIw
OgorCWNhc2UgTUlQSV9EU0lfUEFDS0VEX1BJWEVMX1NUUkVBTV9ZQ0JDUjI0OgorCWNhc2UgTUlQ
SV9EU0lfUEFDS0VEX1BJWEVMX1NUUkVBTV9ZQ0JDUjE2OgorCWNhc2UgTUlQSV9EU0lfUEFDS0VE
X1BJWEVMX1NUUkVBTV8zMDoKKwljYXNlIE1JUElfRFNJX1BBQ0tFRF9QSVhFTF9TVFJFQU1fMzY6
CisJY2FzZSBNSVBJX0RTSV9QQUNLRURfUElYRUxfU1RSRUFNX1lDQkNSMTI6CisJY2FzZSBNSVBJ
X0RTSV9QQUNLRURfUElYRUxfU1RSRUFNXzE2OgorCWNhc2UgTUlQSV9EU0lfUEFDS0VEX1BJWEVM
X1NUUkVBTV8xODoKKwljYXNlIE1JUElfRFNJX1BJWEVMX1NUUkVBTV8zQllURV8xODoKKwljYXNl
IE1JUElfRFNJX1BBQ0tFRF9QSVhFTF9TVFJFQU1fMjQ6CisJCXJldHVybiB0cnVlOworCX0KKwor
CXJldHVybiBmYWxzZTsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lfcGFja2V0X2Zvcm1hdF9p
c19sb25nKTsKKworLyoqCisgKiBtaXBpX2RzaV9jcmVhdGVfcGFja2V0IC0gY3JlYXRlIGEgcGFj
a2V0IGZyb20gYSBtZXNzYWdlIGFjY29yZGluZyB0byB0aGUKKyAqICAgICBEU0kgcHJvdG9jb2wK
KyAqIEBwYWNrZXQ6IHBvaW50ZXIgdG8gYSBEU0kgcGFja2V0IHN0cnVjdHVyZQorICogQG1zZzog
bWVzc2FnZSB0byB0cmFuc2xhdGUgaW50byBhIHBhY2tldAorICoKKyAqIFJldHVybjogMCBvbiBz
dWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlw
aV9kc2lfY3JlYXRlX3BhY2tldChzdHJ1Y3QgbWlwaV9kc2lfcGFja2V0ICpwYWNrZXQsCisJCQkg
ICBjb25zdCBzdHJ1Y3QgbWlwaV9kc2lfbXNnICptc2cpCit7CisJaWYgKCFwYWNrZXQgfHwgIW1z
ZykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwkvKiBkbyBzb21lIG1pbmltdW0gc2FuaXR5IGNoZWNr
aW5nICovCisJaWYgKCFtaXBpX2RzaV9wYWNrZXRfZm9ybWF0X2lzX3Nob3J0KG1zZy0+dHlwZSkg
JiYKKwkgICAgIW1pcGlfZHNpX3BhY2tldF9mb3JtYXRfaXNfbG9uZyhtc2ctPnR5cGUpKQorCQly
ZXR1cm4gLUVJTlZBTDsKKworCWlmIChtc2ctPmNoYW5uZWwgPiAzKQorCQlyZXR1cm4gLUVJTlZB
TDsKKworCW1lbXNldChwYWNrZXQsIDAsIHNpemVvZigqcGFja2V0KSk7CisJcGFja2V0LT5oZWFk
ZXJbMF0gPSAoKG1zZy0+Y2hhbm5lbCAmIDB4MykgPDwgNikgfCAobXNnLT50eXBlICYgMHgzZik7
CisKKwkvKiBUT0RPOiBjb21wdXRlIEVDQyBpZiBoYXJkd2FyZSBzdXBwb3J0IGlzIG5vdCBhdmFp
bGFibGUgKi8KKworCS8qCisJICogTG9uZyB3cml0ZSBwYWNrZXRzIGNvbnRhaW4gdGhlIHdvcmQg
Y291bnQgaW4gaGVhZGVyIGJ5dGVzIDEgYW5kIDIuCisJICogVGhlIHBheWxvYWQgZm9sbG93cyB0
aGUgaGVhZGVyIGFuZCBpcyB3b3JkIGNvdW50IGJ5dGVzIGxvbmcuCisJICoKKwkgKiBTaG9ydCB3
cml0ZSBwYWNrZXRzIGVuY29kZSB1cCB0byB0d28gcGFyYW1ldGVycyBpbiBoZWFkZXIgYnl0ZXMg
MQorCSAqIGFuZCAyLgorCSAqLworCWlmIChtaXBpX2RzaV9wYWNrZXRfZm9ybWF0X2lzX2xvbmco
bXNnLT50eXBlKSkgeworCQlwYWNrZXQtPmhlYWRlclsxXSA9IChtc2ctPnR4X2xlbiA+PiAwKSAm
IDB4ZmY7CisJCXBhY2tldC0+aGVhZGVyWzJdID0gKG1zZy0+dHhfbGVuID4+IDgpICYgMHhmZjsK
KworCQlwYWNrZXQtPnBheWxvYWRfbGVuZ3RoID0gbXNnLT50eF9sZW47CisJCXBhY2tldC0+cGF5
bG9hZCA9IG1zZy0+dHhfYnVmOworCX0gZWxzZSB7CisJCWNvbnN0IHU4ICp0eCA9IG1zZy0+dHhf
YnVmOworCisJCXBhY2tldC0+aGVhZGVyWzFdID0gKG1zZy0+dHhfbGVuID4gMCkgPyB0eFswXSA6
IDA7CisJCXBhY2tldC0+aGVhZGVyWzJdID0gKG1zZy0+dHhfbGVuID4gMSkgPyB0eFsxXSA6IDA7
CisJfQorCisJcGFja2V0LT5zaXplID0gc2l6ZW9mKHBhY2tldC0+aGVhZGVyKSArIHBhY2tldC0+
cGF5bG9hZF9sZW5ndGg7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lf
Y3JlYXRlX3BhY2tldCk7CisKKy8qKgorICogbWlwaV9kc2lfc2h1dGRvd25fcGVyaXBoZXJhbCgp
IC0gc2VuZHMgYSBTaHV0ZG93biBQZXJpcGhlcmFsIGNvbW1hbmQKKyAqIEBkc2k6IERTSSBwZXJp
cGhlcmFsIGRldmljZQorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUg
ZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlwaV9kc2lfc2h1dGRvd25fcGVyaXBo
ZXJhbChzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCit7CisJc3RydWN0IG1pcGlfZHNpX21z
ZyBtc2cgPSB7CisJCS5jaGFubmVsID0gZHNpLT5jaGFubmVsLAorCQkudHlwZSA9IE1JUElfRFNJ
X1NIVVRET1dOX1BFUklQSEVSQUwsCisJCS50eF9idWYgPSAodTggWzJdKSB7IDAsIDAgfSwKKwkJ
LnR4X2xlbiA9IDIsCisJfTsKKwlpbnQgcmV0ID0gbWlwaV9kc2lfZGV2aWNlX3RyYW5zZmVyKGRz
aSwgJm1zZyk7CisKKwlyZXR1cm4gKHJldCA8IDApID8gcmV0IDogMDsKK30KK0VYUE9SVF9TWU1C
T0wobWlwaV9kc2lfc2h1dGRvd25fcGVyaXBoZXJhbCk7CisKKy8qKgorICogbWlwaV9kc2lfdHVy
bl9vbl9wZXJpcGhlcmFsKCkgLSBzZW5kcyBhIFR1cm4gT24gUGVyaXBoZXJhbCBjb21tYW5kCisg
KiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2Vz
cyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNp
X3R1cm5fb25fcGVyaXBoZXJhbChzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCit7CisJc3Ry
dWN0IG1pcGlfZHNpX21zZyBtc2cgPSB7CisJCS5jaGFubmVsID0gZHNpLT5jaGFubmVsLAorCQku
dHlwZSA9IE1JUElfRFNJX1RVUk5fT05fUEVSSVBIRVJBTCwKKwkJLnR4X2J1ZiA9ICh1OCBbMl0p
IHsgMCwgMCB9LAorCQkudHhfbGVuID0gMiwKKwl9OworCWludCByZXQgPSBtaXBpX2RzaV9kZXZp
Y2VfdHJhbnNmZXIoZHNpLCAmbXNnKTsKKworCXJldHVybiAocmV0IDwgMCkgPyByZXQgOiAwOwor
fQorRVhQT1JUX1NZTUJPTChtaXBpX2RzaV90dXJuX29uX3BlcmlwaGVyYWwpOworCisvKgorICog
bWlwaV9kc2lfc2V0X21heGltdW1fcmV0dXJuX3BhY2tldF9zaXplKCkgLSBzcGVjaWZ5IHRoZSBt
YXhpbXVtIHNpemUgb2YgdGhlCisgKiAgICB0aGUgcGF5bG9hZCBpbiBhIGxvbmcgcGFja2V0IHRy
YW5zbWl0dGVkIGZyb20gdGhlIHBlcmlwaGVyYWwgYmFjayB0byB0aGUKKyAqICAgIGhvc3QgcHJv
Y2Vzc29yCisgKiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqIEB2YWx1ZTogdGhlIG1h
eGltdW0gc2l6ZSBvZiB0aGUgcGF5bG9hZAorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9y
IGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlwaV9kc2lfc2V0
X21heGltdW1fcmV0dXJuX3BhY2tldF9zaXplKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwK
KwkJCQkJICAgIHUxNiB2YWx1ZSkKK3sKKwl1OCB0eFsyXSA9IHsgdmFsdWUgJiAweGZmLCB2YWx1
ZSA+PiA4IH07CisJc3RydWN0IG1pcGlfZHNpX21zZyBtc2cgPSB7CisJCS5jaGFubmVsID0gZHNp
LT5jaGFubmVsLAorCQkudHlwZSA9IE1JUElfRFNJX1NFVF9NQVhJTVVNX1JFVFVSTl9QQUNLRVRf
U0laRSwKKwkJLnR4X2xlbiA9IHNpemVvZih0eCksCisJCS50eF9idWYgPSB0eCwKKwl9OworCWlu
dCByZXQgPSBtaXBpX2RzaV9kZXZpY2VfdHJhbnNmZXIoZHNpLCAmbXNnKTsKKworCXJldHVybiAo
cmV0IDwgMCkgPyByZXQgOiAwOworfQorRVhQT1JUX1NZTUJPTChtaXBpX2RzaV9zZXRfbWF4aW11
bV9yZXR1cm5fcGFja2V0X3NpemUpOworCisvKioKKyAqIG1pcGlfZHNpX2dlbmVyaWNfd3JpdGUo
KSAtIHRyYW5zbWl0IGRhdGEgdXNpbmcgYSBnZW5lcmljIHdyaXRlIHBhY2tldAorICogQGRzaTog
RFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAcGF5bG9hZDogYnVmZmVyIGNvbnRhaW5pbmcgdGhl
IHBheWxvYWQKKyAqIEBzaXplOiBzaXplIG9mIHBheWxvYWQgYnVmZmVyCisgKgorICogVGhpcyBm
dW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2hvb3NlIHRoZSByaWdodCBkYXRhIHR5cGUgZGVw
ZW5kaW5nIG9uCisgKiB0aGUgcGF5bG9hZCBsZW5ndGguCisgKgorICogUmV0dXJuOiBUaGUgbnVt
YmVyIG9mIGJ5dGVzIHRyYW5zbWl0dGVkIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBj
b2RlCisgKiBvbiBmYWlsdXJlLgorICovCitzc2l6ZV90IG1pcGlfZHNpX2dlbmVyaWNfd3JpdGUo
c3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpLCBjb25zdCB2b2lkICpwYXlsb2FkLAorCQkJICAg
ICAgIHNpemVfdCBzaXplKQoreworCXN0cnVjdCBtaXBpX2RzaV9tc2cgbXNnID0geworCQkuY2hh
bm5lbCA9IGRzaS0+Y2hhbm5lbCwKKwkJLnR4X2J1ZiA9IHBheWxvYWQsCisJCS50eF9sZW4gPSBz
aXplCisJfTsKKworCXN3aXRjaCAoc2l6ZSkgeworCWNhc2UgMDoKKwkJbXNnLnR5cGUgPSBNSVBJ
X0RTSV9HRU5FUklDX1NIT1JUX1dSSVRFXzBfUEFSQU07CisJCWJyZWFrOworCisJY2FzZSAxOgor
CQltc2cudHlwZSA9IE1JUElfRFNJX0dFTkVSSUNfU0hPUlRfV1JJVEVfMV9QQVJBTTsKKwkJYnJl
YWs7CisKKwljYXNlIDI6CisJCW1zZy50eXBlID0gTUlQSV9EU0lfR0VORVJJQ19TSE9SVF9XUklU
RV8yX1BBUkFNOworCQlicmVhazsKKworCWRlZmF1bHQ6CisJCW1zZy50eXBlID0gTUlQSV9EU0lf
R0VORVJJQ19MT05HX1dSSVRFOworCQlicmVhazsKKwl9CisKKwlyZXR1cm4gbWlwaV9kc2lfZGV2
aWNlX3RyYW5zZmVyKGRzaSwgJm1zZyk7Cit9CitFWFBPUlRfU1lNQk9MKG1pcGlfZHNpX2dlbmVy
aWNfd3JpdGUpOworCisvKioKKyAqIG1pcGlfZHNpX2dlbmVyaWNfcmVhZCgpIC0gcmVjZWl2ZSBk
YXRhIHVzaW5nIGEgZ2VuZXJpYyByZWFkIHBhY2tldAorICogQGRzaTogRFNJIHBlcmlwaGVyYWwg
ZGV2aWNlCisgKiBAcGFyYW1zOiBidWZmZXIgY29udGFpbmluZyB0aGUgcmVxdWVzdCBwYXJhbWV0
ZXJzCisgKiBAbnVtX3BhcmFtczogbnVtYmVyIG9mIHJlcXVlc3QgcGFyYW1ldGVycworICogQGRh
dGE6IGJ1ZmZlciBpbiB3aGljaCB0byByZXR1cm4gdGhlIHJlY2VpdmVkIGRhdGEKKyAqIEBzaXpl
OiBzaXplIG9mIHJlY2VpdmUgYnVmZmVyCisgKgorICogVGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9t
YXRpY2FsbHkgY2hvb3NlIHRoZSByaWdodCBkYXRhIHR5cGUgZGVwZW5kaW5nIG9uCisgKiB0aGUg
bnVtYmVyIG9mIHBhcmFtZXRlcnMgcGFzc2VkIGluLgorICoKKyAqIFJldHVybjogVGhlIG51bWJl
ciBvZiBieXRlcyBzdWNjZXNzZnVsbHkgcmVhZCBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24K
KyAqIGZhaWx1cmUuCisgKi8KK3NzaXplX3QgbWlwaV9kc2lfZ2VuZXJpY19yZWFkKHN0cnVjdCBt
aXBpX2RzaV9kZXZpY2UgKmRzaSwgY29uc3Qgdm9pZCAqcGFyYW1zLAorCQkJICAgICAgc2l6ZV90
IG51bV9wYXJhbXMsIHZvaWQgKmRhdGEsIHNpemVfdCBzaXplKQoreworCXN0cnVjdCBtaXBpX2Rz
aV9tc2cgbXNnID0geworCQkuY2hhbm5lbCA9IGRzaS0+Y2hhbm5lbCwKKwkJLnR4X2xlbiA9IG51
bV9wYXJhbXMsCisJCS50eF9idWYgPSBwYXJhbXMsCisJCS5yeF9sZW4gPSBzaXplLAorCQkucnhf
YnVmID0gZGF0YQorCX07CisKKwlzd2l0Y2ggKG51bV9wYXJhbXMpIHsKKwljYXNlIDA6CisJCW1z
Zy50eXBlID0gTUlQSV9EU0lfR0VORVJJQ19SRUFEX1JFUVVFU1RfMF9QQVJBTTsKKwkJYnJlYWs7
CisKKwljYXNlIDE6CisJCW1zZy50eXBlID0gTUlQSV9EU0lfR0VORVJJQ19SRUFEX1JFUVVFU1Rf
MV9QQVJBTTsKKwkJYnJlYWs7CisKKwljYXNlIDI6CisJCW1zZy50eXBlID0gTUlQSV9EU0lfR0VO
RVJJQ19SRUFEX1JFUVVFU1RfMl9QQVJBTTsKKwkJYnJlYWs7CisKKwlkZWZhdWx0OgorCQlyZXR1
cm4gLUVJTlZBTDsKKwl9CisKKwlyZXR1cm4gbWlwaV9kc2lfZGV2aWNlX3RyYW5zZmVyKGRzaSwg
Jm1zZyk7Cit9CitFWFBPUlRfU1lNQk9MKG1pcGlfZHNpX2dlbmVyaWNfcmVhZCk7CisKKy8qKgor
ICogbWlwaV9kc2lfZGNzX3dyaXRlX2J1ZmZlcigpIC0gdHJhbnNtaXQgYSBEQ1MgY29tbWFuZCB3
aXRoIHBheWxvYWQKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICogQGRhdGE6IGJ1
ZmZlciBjb250YWluaW5nIGRhdGEgdG8gYmUgdHJhbnNtaXR0ZWQKKyAqIEBsZW46IHNpemUgb2Yg
dHJhbnNtaXNzaW9uIGJ1ZmZlcgorICoKKyAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNh
bGx5IGNob29zZSB0aGUgcmlnaHQgZGF0YSB0eXBlIGRlcGVuZGluZyBvbgorICogdGhlIGNvbW1h
bmQgcGF5bG9hZCBsZW5ndGguCisgKgorICogUmV0dXJuOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHN1
Y2Nlc3NmdWxseSB0cmFuc21pdHRlZCBvciBhIG5lZ2F0aXZlIGVycm9yCisgKiBjb2RlIG9uIGZh
aWx1cmUuCisgKi8KK3NzaXplX3QgbWlwaV9kc2lfZGNzX3dyaXRlX2J1ZmZlcihzdHJ1Y3QgbWlw
aV9kc2lfZGV2aWNlICpkc2ksCisJCQkJICBjb25zdCB2b2lkICpkYXRhLCBzaXplX3QgbGVuKQor
eworCXN0cnVjdCBtaXBpX2RzaV9tc2cgbXNnID0geworCQkuY2hhbm5lbCA9IGRzaS0+Y2hhbm5l
bCwKKwkJLnR4X2J1ZiA9IGRhdGEsCisJCS50eF9sZW4gPSBsZW4KKwl9OworCisJc3dpdGNoIChs
ZW4pIHsKKwljYXNlIDA6CisJCXJldHVybiAtRUlOVkFMOworCisJY2FzZSAxOgorCQltc2cudHlw
ZSA9IE1JUElfRFNJX0RDU19TSE9SVF9XUklURTsKKwkJYnJlYWs7CisKKwljYXNlIDI6CisJCW1z
Zy50eXBlID0gTUlQSV9EU0lfRENTX1NIT1JUX1dSSVRFX1BBUkFNOworCQlicmVhazsKKworCWRl
ZmF1bHQ6CisJCW1zZy50eXBlID0gTUlQSV9EU0lfRENTX0xPTkdfV1JJVEU7CisJCWJyZWFrOwor
CX0KKworCXJldHVybiBtaXBpX2RzaV9kZXZpY2VfdHJhbnNmZXIoZHNpLCAmbXNnKTsKK30KK0VY
UE9SVF9TWU1CT0wobWlwaV9kc2lfZGNzX3dyaXRlX2J1ZmZlcik7CisKKy8qKgorICogbWlwaV9k
c2lfZGNzX3dyaXRlKCkgLSBzZW5kIERDUyB3cml0ZSBjb21tYW5kCisgKiBAZHNpOiBEU0kgcGVy
aXBoZXJhbCBkZXZpY2UKKyAqIEBjbWQ6IERDUyBjb21tYW5kCisgKiBAZGF0YTogYnVmZmVyIGNv
bnRhaW5pbmcgdGhlIGNvbW1hbmQgcGF5bG9hZAorICogQGxlbjogY29tbWFuZCBwYXlsb2FkIGxl
bmd0aAorICoKKyAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGNob29zZSB0aGUg
cmlnaHQgZGF0YSB0eXBlIGRlcGVuZGluZyBvbgorICogdGhlIGNvbW1hbmQgcGF5bG9hZCBsZW5n
dGguCisgKgorICogUmV0dXJuOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHN1Y2Nlc3NmdWxseSB0cmFu
c21pdHRlZCBvciBhIG5lZ2F0aXZlIGVycm9yCisgKiBjb2RlIG9uIGZhaWx1cmUuCisgKi8KK3Nz
aXplX3QgbWlwaV9kc2lfZGNzX3dyaXRlKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwgdTgg
Y21kLAorCQkJICAgY29uc3Qgdm9pZCAqZGF0YSwgc2l6ZV90IGxlbikKK3sKKwlzc2l6ZV90IGVy
cjsKKwlzaXplX3Qgc2l6ZTsKKwl1OCAqdHg7CisKKwlpZiAobGVuID4gMCkgeworCQlzaXplID0g
MSArIGxlbjsKKworCQl0eCA9IGttYWxsb2Moc2l6ZSwgR0ZQX0tFUk5FTCk7CisJCWlmICghdHgp
CisJCQlyZXR1cm4gLUVOT01FTTsKKworCQkvKiBjb25jYXRlbmF0ZSB0aGUgRENTIGNvbW1hbmQg
Ynl0ZSBhbmQgdGhlIHBheWxvYWQgKi8KKwkJdHhbMF0gPSBjbWQ7CisJCW1lbWNweSgmdHhbMV0s
IGRhdGEsIGxlbik7CisJfSBlbHNlIHsKKwkJdHggPSAmY21kOworCQlzaXplID0gMTsKKwl9CisK
KwllcnIgPSBtaXBpX2RzaV9kY3Nfd3JpdGVfYnVmZmVyKGRzaSwgdHgsIHNpemUpOworCisJaWYg
KGxlbiA+IDApCisJCWtmcmVlKHR4KTsKKworCXJldHVybiBlcnI7Cit9CitFWFBPUlRfU1lNQk9M
KG1pcGlfZHNpX2Rjc193cml0ZSk7CisKKy8qKgorICogbWlwaV9kc2lfZGNzX3JlYWQoKSAtIHNl
bmQgRENTIHJlYWQgcmVxdWVzdCBjb21tYW5kCisgKiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZp
Y2UKKyAqIEBjbWQ6IERDUyBjb21tYW5kCisgKiBAZGF0YTogYnVmZmVyIGluIHdoaWNoIHRvIHJl
Y2VpdmUgZGF0YQorICogQGxlbjogc2l6ZSBvZiByZWNlaXZlIGJ1ZmZlcgorICoKKyAqIFJldHVy
bjogVGhlIG51bWJlciBvZiBieXRlcyByZWFkIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBm
YWlsdXJlLgorICovCitzc2l6ZV90IG1pcGlfZHNpX2Rjc19yZWFkKHN0cnVjdCBtaXBpX2RzaV9k
ZXZpY2UgKmRzaSwgdTggY21kLCB2b2lkICpkYXRhLAorCQkJICBzaXplX3QgbGVuKQoreworCXN0
cnVjdCBtaXBpX2RzaV9tc2cgbXNnID0geworCQkuY2hhbm5lbCA9IGRzaS0+Y2hhbm5lbCwKKwkJ
LnR5cGUgPSBNSVBJX0RTSV9EQ1NfUkVBRCwKKwkJLnR4X2J1ZiA9ICZjbWQsCisJCS50eF9sZW4g
PSAxLAorCQkucnhfYnVmID0gZGF0YSwKKwkJLnJ4X2xlbiA9IGxlbgorCX07CisKKwlyZXR1cm4g
bWlwaV9kc2lfZGV2aWNlX3RyYW5zZmVyKGRzaSwgJm1zZyk7Cit9CitFWFBPUlRfU1lNQk9MKG1p
cGlfZHNpX2Rjc19yZWFkKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfbm9wKCkgLSBzZW5kIERD
UyBub3AgcGFja2V0CisgKiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqCisgKiBSZXR1
cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAq
LworaW50IG1pcGlfZHNpX2Rjc19ub3Aoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQorewor
CXNzaXplX3QgZXJyOworCisJZXJyID0gbWlwaV9kc2lfZGNzX3dyaXRlKGRzaSwgTUlQSV9EQ1Nf
Tk9QLCBOVUxMLCAwKTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJldHVybiAw
OworfQorRVhQT1JUX1NZTUJPTChtaXBpX2RzaV9kY3Nfbm9wKTsKKworLyoqCisgKiBtaXBpX2Rz
aV9kY3Nfc29mdF9yZXNldCgpIC0gcGVyZm9ybSBhIHNvZnR3YXJlIHJlc2V0IG9mIHRoZSBkaXNw
bGF5IG1vZHVsZQorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKgorICogUmV0dXJu
OiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8K
K2ludCBtaXBpX2RzaV9kY3Nfc29mdF9yZXNldChzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kp
Cit7CisJc3NpemVfdCBlcnI7CisKKwllcnIgPSBtaXBpX2RzaV9kY3Nfd3JpdGUoZHNpLCBNSVBJ
X0RDU19TT0ZUX1JFU0VULCBOVUxMLCAwKTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsK
KworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJPTChtaXBpX2RzaV9kY3Nfc29mdF9yZXNldCk7
CisKKy8qKgorICogbWlwaV9kc2lfZGNzX2dldF9wb3dlcl9tb2RlKCkgLSBxdWVyeSB0aGUgZGlz
cGxheSBtb2R1bGUncyBjdXJyZW50IHBvd2VyCisgKiAgICBtb2RlCisgKiBAZHNpOiBEU0kgcGVy
aXBoZXJhbCBkZXZpY2UKKyAqIEBtb2RlOiByZXR1cm4gbG9jYXRpb24gZm9yIHRoZSBjdXJyZW50
IHBvd2VyIG1vZGUKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVy
cm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19nZXRfcG93ZXJfbW9k
ZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2ksIHU4ICptb2RlKQoreworCXNzaXplX3QgZXJy
OworCisJZXJyID0gbWlwaV9kc2lfZGNzX3JlYWQoZHNpLCBNSVBJX0RDU19HRVRfUE9XRVJfTU9E
RSwgbW9kZSwKKwkJCQlzaXplb2YoKm1vZGUpKTsKKwlpZiAoZXJyIDw9IDApIHsKKwkJaWYgKGVy
ciA9PSAwKQorCQkJZXJyID0gLUVOT0RBVEE7CisKKwkJcmV0dXJuIGVycjsKKwl9CisKKwlyZXR1
cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lfZGNzX2dldF9wb3dlcl9tb2RlKTsKKwor
LyoqCisgKiBtaXBpX2RzaV9kY3NfZ2V0X3BpeGVsX2Zvcm1hdCgpIC0gZ2V0cyB0aGUgcGl4ZWwg
Zm9ybWF0IGZvciB0aGUgUkdCIGltYWdlCisgKiAgICBkYXRhIHVzZWQgYnkgdGhlIGludGVyZmFj
ZQorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAZm9ybWF0OiByZXR1cm4gbG9j
YXRpb24gZm9yIHRoZSBwaXhlbCBmb3JtYXQKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBv
ciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rj
c19nZXRfcGl4ZWxfZm9ybWF0KHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwgdTggKmZvcm1h
dCkKK3sKKwlzc2l6ZV90IGVycjsKKworCWVyciA9IG1pcGlfZHNpX2Rjc19yZWFkKGRzaSwgTUlQ
SV9EQ1NfR0VUX1BJWEVMX0ZPUk1BVCwgZm9ybWF0LAorCQkJCXNpemVvZigqZm9ybWF0KSk7CisJ
aWYgKGVyciA8PSAwKSB7CisJCWlmIChlcnIgPT0gMCkKKwkJCWVyciA9IC1FTk9EQVRBOworCisJ
CXJldHVybiBlcnI7CisJfQorCisJcmV0dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKG1pcGlfZHNp
X2Rjc19nZXRfcGl4ZWxfZm9ybWF0KTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3NfZW50ZXJfc2xl
ZXBfbW9kZSgpIC0gZGlzYWJsZSBhbGwgdW5uZWNlc3NhcnkgYmxvY2tzIGluc2lkZSB0aGUKKyAq
ICAgIGRpc3BsYXkgbW9kdWxlIGV4Y2VwdCBpbnRlcmZhY2UgY29tbXVuaWNhdGlvbgorICogQGRz
aTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3Ig
YSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8KK2ludCBtaXBpX2RzaV9kY3Nf
ZW50ZXJfc2xlZXBfbW9kZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCit7CisJc3NpemVf
dCBlcnI7CisKKwllcnIgPSBtaXBpX2RzaV9kY3Nfd3JpdGUoZHNpLCBNSVBJX0RDU19FTlRFUl9T
TEVFUF9NT0RFLCBOVUxMLCAwKTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJl
dHVybiAwOworfQorRVhQT1JUX1NZTUJPTChtaXBpX2RzaV9kY3NfZW50ZXJfc2xlZXBfbW9kZSk7
CisKKy8qKgorICogbWlwaV9kc2lfZGNzX2V4aXRfc2xlZXBfbW9kZSgpIC0gZW5hYmxlIGFsbCBi
bG9ja3MgaW5zaWRlIHRoZSBkaXNwbGF5CisgKiAgICBtb2R1bGUKKyAqIEBkc2k6IERTSSBwZXJp
cGhlcmFsIGRldmljZQorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUg
ZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlwaV9kc2lfZGNzX2V4aXRfc2xlZXBf
bW9kZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpCit7CisJc3NpemVfdCBlcnI7CisKKwll
cnIgPSBtaXBpX2RzaV9kY3Nfd3JpdGUoZHNpLCBNSVBJX0RDU19FWElUX1NMRUVQX01PREUsIE5V
TEwsIDApOworCWlmIChlcnIgPCAwKQorCQlyZXR1cm4gZXJyOworCisJcmV0dXJuIDA7Cit9CitF
WFBPUlRfU1lNQk9MKG1pcGlfZHNpX2Rjc19leGl0X3NsZWVwX21vZGUpOworCisvKioKKyAqIG1p
cGlfZHNpX2Rjc19zZXRfZGlzcGxheV9vZmYoKSAtIHN0b3AgZGlzcGxheWluZyB0aGUgaW1hZ2Ug
ZGF0YSBvbiB0aGUKKyAqICAgIGRpc3BsYXkgZGV2aWNlCisgKiBAZHNpOiBEU0kgcGVyaXBoZXJh
bCBkZXZpY2UKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9y
IGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfZGlzcGxheV9vZmYo
c3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQoreworCXNzaXplX3QgZXJyOworCisJZXJyID0g
bWlwaV9kc2lfZGNzX3dyaXRlKGRzaSwgTUlQSV9EQ1NfU0VUX0RJU1BMQVlfT0ZGLCBOVUxMLCAw
KTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJldHVybiAwOworfQorRVhQT1JU
X1NZTUJPTChtaXBpX2RzaV9kY3Nfc2V0X2Rpc3BsYXlfb2ZmKTsKKworLyoqCisgKiBtaXBpX2Rz
aV9kY3Nfc2V0X2Rpc3BsYXlfb24oKSAtIHN0YXJ0IGRpc3BsYXlpbmcgdGhlIGltYWdlIGRhdGEg
b24gdGhlCisgKiAgICBkaXNwbGF5IGRldmljZQorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2
aWNlCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2Rl
IG9uIGZhaWx1cmUKKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfZGlzcGxheV9vbihzdHJ1Y3Qg
bWlwaV9kc2lfZGV2aWNlICpkc2kpCit7CisJc3NpemVfdCBlcnI7CisKKwllcnIgPSBtaXBpX2Rz
aV9kY3Nfd3JpdGUoZHNpLCBNSVBJX0RDU19TRVRfRElTUExBWV9PTiwgTlVMTCwgMCk7CisJaWYg
KGVyciA8IDApCisJCXJldHVybiBlcnI7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wo
bWlwaV9kc2lfZGNzX3NldF9kaXNwbGF5X29uKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0
X2NvbHVtbl9hZGRyZXNzKCkgLSBkZWZpbmUgdGhlIGNvbHVtbiBleHRlbnQgb2YgdGhlIGZyYW1l
CisgKiAgICBtZW1vcnkgYWNjZXNzZWQgYnkgdGhlIGhvc3QgcHJvY2Vzc29yCisgKiBAZHNpOiBE
U0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqIEBzdGFydDogZmlyc3QgY29sdW1uIG9mIGZyYW1lIG1l
bW9yeQorICogQGVuZDogbGFzdCBjb2x1bW4gb2YgZnJhbWUgbWVtb3J5CisgKgorICogUmV0dXJu
OiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8K
K2ludCBtaXBpX2RzaV9kY3Nfc2V0X2NvbHVtbl9hZGRyZXNzKHN0cnVjdCBtaXBpX2RzaV9kZXZp
Y2UgKmRzaSwgdTE2IHN0YXJ0LAorCQkJCSAgICB1MTYgZW5kKQoreworCXU4IHBheWxvYWRbNF0g
PSB7IHN0YXJ0ID4+IDgsIHN0YXJ0ICYgMHhmZiwgZW5kID4+IDgsIGVuZCAmIDB4ZmYgfTsKKwlz
c2l6ZV90IGVycjsKKworCWVyciA9IG1pcGlfZHNpX2Rjc193cml0ZShkc2ksIE1JUElfRENTX1NF
VF9DT0xVTU5fQUREUkVTUywgcGF5bG9hZCwKKwkJCQkgc2l6ZW9mKHBheWxvYWQpKTsKKwlpZiAo
ZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJPTCht
aXBpX2RzaV9kY3Nfc2V0X2NvbHVtbl9hZGRyZXNzKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nf
c2V0X3BhZ2VfYWRkcmVzcygpIC0gZGVmaW5lIHRoZSBwYWdlIGV4dGVudCBvZiB0aGUgZnJhbWUK
KyAqICAgIG1lbW9yeSBhY2Nlc3NlZCBieSB0aGUgaG9zdCBwcm9jZXNzb3IKKyAqIEBkc2k6IERT
SSBwZXJpcGhlcmFsIGRldmljZQorICogQHN0YXJ0OiBmaXJzdCBwYWdlIG9mIGZyYW1lIG1lbW9y
eQorICogQGVuZDogbGFzdCBwYWdlIG9mIGZyYW1lIG1lbW9yeQorICoKKyAqIFJldHVybjogMCBv
biBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQg
bWlwaV9kc2lfZGNzX3NldF9wYWdlX2FkZHJlc3Moc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNp
LCB1MTYgc3RhcnQsCisJCQkJICB1MTYgZW5kKQoreworCXU4IHBheWxvYWRbNF0gPSB7IHN0YXJ0
ID4+IDgsIHN0YXJ0ICYgMHhmZiwgZW5kID4+IDgsIGVuZCAmIDB4ZmYgfTsKKwlzc2l6ZV90IGVy
cjsKKworCWVyciA9IG1pcGlfZHNpX2Rjc193cml0ZShkc2ksIE1JUElfRENTX1NFVF9QQUdFX0FE
RFJFU1MsIHBheWxvYWQsCisJCQkJIHNpemVvZihwYXlsb2FkKSk7CisJaWYgKGVyciA8IDApCisJ
CXJldHVybiBlcnI7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lfZGNz
X3NldF9wYWdlX2FkZHJlc3MpOworCisvKioKKyAqIG1pcGlfZHNpX2Rjc19zZXRfdGVhcl9vZmYo
KSAtIHR1cm4gb2ZmIHRoZSBkaXNwbGF5IG1vZHVsZSdzIFRlYXJpbmcgRWZmZWN0CisgKiAgICBv
dXRwdXQgc2lnbmFsIG9uIHRoZSBURSBzaWduYWwgbGluZQorICogQGRzaTogRFNJIHBlcmlwaGVy
YWwgZGV2aWNlCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJv
ciBjb2RlIG9uIGZhaWx1cmUKKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfdGVhcl9vZmYoc3Ry
dWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKQoreworCXNzaXplX3QgZXJyOworCisJZXJyID0gbWlw
aV9kc2lfZGNzX3dyaXRlKGRzaSwgTUlQSV9EQ1NfU0VUX1RFQVJfT0ZGLCBOVUxMLCAwKTsKKwlp
ZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJP
TChtaXBpX2RzaV9kY3Nfc2V0X3RlYXJfb2ZmKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0
X3RlYXJfb24oKSAtIHR1cm4gb24gdGhlIGRpc3BsYXkgbW9kdWxlJ3MgVGVhcmluZyBFZmZlY3QK
KyAqICAgIG91dHB1dCBzaWduYWwgb24gdGhlIFRFIHNpZ25hbCBsaW5lLgorICogQGRzaTogRFNJ
IHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAbW9kZTogdGhlIFRlYXJpbmcgRWZmZWN0IE91dHB1dCBM
aW5lIG1vZGUKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9y
IGNvZGUgb24gZmFpbHVyZQorICovCitpbnQgbWlwaV9kc2lfZGNzX3NldF90ZWFyX29uKHN0cnVj
dCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwKKwkJCSAgICAgZW51bSBtaXBpX2RzaV9kY3NfdGVhcl9t
b2RlIG1vZGUpCit7CisJdTggdmFsdWUgPSBtb2RlOworCXNzaXplX3QgZXJyOworCisJZXJyID0g
bWlwaV9kc2lfZGNzX3dyaXRlKGRzaSwgTUlQSV9EQ1NfU0VUX1RFQVJfT04sICZ2YWx1ZSwKKwkJ
CQkgc2l6ZW9mKHZhbHVlKSk7CisJaWYgKGVyciA8IDApCisJCXJldHVybiBlcnI7CisKKwlyZXR1
cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lfZGNzX3NldF90ZWFyX29uKTsKKworLyoq
CisgKiBtaXBpX2RzaV9kY3Nfc2V0X3BpeGVsX2Zvcm1hdCgpIC0gc2V0cyB0aGUgcGl4ZWwgZm9y
bWF0IGZvciB0aGUgUkdCIGltYWdlCisgKiAgICBkYXRhIHVzZWQgYnkgdGhlIGludGVyZmFjZQor
ICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAZm9ybWF0OiBwaXhlbCBmb3JtYXQK
KyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24g
ZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfcGl4ZWxfZm9ybWF0KHN0cnVjdCBt
aXBpX2RzaV9kZXZpY2UgKmRzaSwgdTggZm9ybWF0KQoreworCXNzaXplX3QgZXJyOworCisJZXJy
ID0gbWlwaV9kc2lfZGNzX3dyaXRlKGRzaSwgTUlQSV9EQ1NfU0VUX1BJWEVMX0ZPUk1BVCwgJmZv
cm1hdCwKKwkJCQkgc2l6ZW9mKGZvcm1hdCkpOworCWlmIChlcnIgPCAwKQorCQlyZXR1cm4gZXJy
OworCisJcmV0dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKG1pcGlfZHNpX2Rjc19zZXRfcGl4ZWxf
Zm9ybWF0KTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0X3RlYXJfc2NhbmxpbmUoKSAtIHNl
dCB0aGUgc2NhbmxpbmUgdG8gdXNlIGFzIHRyaWdnZXIgZm9yCisgKiAgICB0aGUgVGVhcmluZyBF
ZmZlY3Qgb3V0cHV0IHNpZ25hbCBvZiB0aGUgZGlzcGxheSBtb2R1bGUKKyAqIEBkc2k6IERTSSBw
ZXJpcGhlcmFsIGRldmljZQorICogQHNjYW5saW5lOiBzY2FubGluZSB0byB1c2UgYXMgdHJpZ2dl
cgorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBv
biBmYWlsdXJlCisgKi8KK2ludCBtaXBpX2RzaV9kY3Nfc2V0X3RlYXJfc2NhbmxpbmUoc3RydWN0
IG1pcGlfZHNpX2RldmljZSAqZHNpLCB1MTYgc2NhbmxpbmUpCit7CisJdTggcGF5bG9hZFszXSA9
IHsgTUlQSV9EQ1NfU0VUX1RFQVJfU0NBTkxJTkUsIHNjYW5saW5lID4+IDgsCisJCQkgIHNjYW5s
aW5lICYgMHhmZiB9OworCXNzaXplX3QgZXJyOworCisJZXJyID0gbWlwaV9kc2lfZ2VuZXJpY193
cml0ZShkc2ksIHBheWxvYWQsIHNpemVvZihwYXlsb2FkKSk7CisJaWYgKGVyciA8IDApCisJCXJl
dHVybiBlcnI7CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0wobWlwaV9kc2lfZGNzX3Nl
dF90ZWFyX3NjYW5saW5lKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0X2Rpc3BsYXlfYnJp
Z2h0bmVzcygpIC0gc2V0cyB0aGUgYnJpZ2h0bmVzcyB2YWx1ZSBvZiB0aGUKKyAqICAgIGRpc3Bs
YXkKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICogQGJyaWdodG5lc3M6IGJyaWdo
dG5lc3MgdmFsdWUKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVy
cm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfZGlzcGxheV9i
cmlnaHRuZXNzKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwKKwkJCQkJdTE2IGJyaWdodG5l
c3MpCit7CisJdTggcGF5bG9hZFsyXSA9IHsgYnJpZ2h0bmVzcyAmIDB4ZmYsIGJyaWdodG5lc3Mg
Pj4gOCB9OworCXNzaXplX3QgZXJyOworCisJZXJyID0gbWlwaV9kc2lfZGNzX3dyaXRlKGRzaSwg
TUlQSV9EQ1NfU0VUX0RJU1BMQVlfQlJJR0hUTkVTUywKKwkJCQkgcGF5bG9hZCwgc2l6ZW9mKHBh
eWxvYWQpKTsKKwlpZiAoZXJyIDwgMCkKKwkJcmV0dXJuIGVycjsKKworCXJldHVybiAwOworfQor
RVhQT1JUX1NZTUJPTChtaXBpX2RzaV9kY3Nfc2V0X2Rpc3BsYXlfYnJpZ2h0bmVzcyk7CisKKy8q
KgorICogbWlwaV9kc2lfZGNzX2dldF9kaXNwbGF5X2JyaWdodG5lc3MoKSAtIGdldHMgdGhlIGN1
cnJlbnQgYnJpZ2h0bmVzcyB2YWx1ZQorICogICAgb2YgdGhlIGRpc3BsYXkKKyAqIEBkc2k6IERT
SSBwZXJpcGhlcmFsIGRldmljZQorICogQGJyaWdodG5lc3M6IGJyaWdodG5lc3MgdmFsdWUKKyAq
CisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFp
bHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19nZXRfZGlzcGxheV9icmlnaHRuZXNzKHN0cnVj
dCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwKKwkJCQkJdTE2ICpicmlnaHRuZXNzKQoreworCXNzaXpl
X3QgZXJyOworCisJZXJyID0gbWlwaV9kc2lfZGNzX3JlYWQoZHNpLCBNSVBJX0RDU19HRVRfRElT
UExBWV9CUklHSFRORVNTLAorCQkJCWJyaWdodG5lc3MsIHNpemVvZigqYnJpZ2h0bmVzcykpOwor
CWlmIChlcnIgPD0gMCkgeworCQlpZiAoZXJyID09IDApCisJCQllcnIgPSAtRU5PREFUQTsKKwor
CQlyZXR1cm4gZXJyOworCX0KKworCXJldHVybiAwOworfQorRVhQT1JUX1NZTUJPTChtaXBpX2Rz
aV9kY3NfZ2V0X2Rpc3BsYXlfYnJpZ2h0bmVzcyk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL21pcGlf
ZHNpLmggYi9pbmNsdWRlL21pcGlfZHNpLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMC4uZjRhNjNiNAotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvbWlwaV9kc2kuaApAQCAt
MCwwICsxLDQ2NiBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8KKy8q
CisgKiBNSVBJIERTSSBCdXMKKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTItMjAxMywgU2Ftc3Vu
ZyBFbGVjdHJvbmljcywgQ28uLCBMdGQuCisgKiBDb3B5cmlnaHQgKEMpIDIwMTggU1RNaWNyb2Vs
ZWN0cm9uaWNzIC0gQWxsIFJpZ2h0cyBSZXNlcnZlZAorICogQXV0aG9yKHMpOiBBbmRyemVqIEhh
amRhIDxhLmhhamRhQHNhbXN1bmcuY29tPgorICogICAgICAgICAgICBZYW5uaWNrIEZlcnRyZSA8
eWFubmljay5mZXJ0cmVAc3QuY29tPgorICogICAgICAgICAgICBQaGlsaXBwZSBDb3JudSA8cGhp
bGlwcGUuY29ybnVAc3QuY29tPgorICoKKyAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJl
OyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5CisgKiBpdCB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHZlcnNpb24gMiBhcworICog
cHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24uCisgKi8KKyNpZm5kZWYg
TUlQSV9EU0lfSAorI2RlZmluZSBNSVBJX0RTSV9ICisKKyNpbmNsdWRlIDxtaXBpX2Rpc3BsYXku
aD4KKworc3RydWN0IG1pcGlfZHNpX2hvc3Q7CitzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlOworCisv
KiByZXF1ZXN0IEFDSyBmcm9tIHBlcmlwaGVyYWwgKi8KKyNkZWZpbmUgTUlQSV9EU0lfTVNHX1JF
UV9BQ0sJQklUKDApCisvKiB1c2UgTG93IFBvd2VyIE1vZGUgdG8gdHJhbnNtaXQgbWVzc2FnZSAq
LworI2RlZmluZSBNSVBJX0RTSV9NU0dfVVNFX0xQTQlCSVQoMSkKKworLyoqCisgKiBzdHJ1Y3Qg
bWlwaV9kc2lfbXNnIC0gcmVhZC93cml0ZSBEU0kgYnVmZmVyCisgKiBAY2hhbm5lbDogdmlydHVh
bCBjaGFubmVsIGlkCisgKiBAdHlwZTogcGF5bG9hZCBkYXRhIHR5cGUKKyAqIEBmbGFnczogZmxh
Z3MgY29udHJvbGxpbmcgdGhpcyBtZXNzYWdlIHRyYW5zbWlzc2lvbgorICogQHR4X2xlbjogbGVu
Z3RoIG9mIEB0eF9idWYKKyAqIEB0eF9idWY6IGRhdGEgdG8gYmUgd3JpdHRlbgorICogQHJ4X2xl
bjogbGVuZ3RoIG9mIEByeF9idWYKKyAqIEByeF9idWY6IGRhdGEgdG8gYmUgcmVhZCwgb3IgTlVM
TAorICovCitzdHJ1Y3QgbWlwaV9kc2lfbXNnIHsKKwl1OCBjaGFubmVsOworCXU4IHR5cGU7CisJ
dTE2IGZsYWdzOworCisJc2l6ZV90IHR4X2xlbjsKKwljb25zdCB2b2lkICp0eF9idWY7CisKKwlz
aXplX3QgcnhfbGVuOworCXZvaWQgKnJ4X2J1ZjsKK307CisKK2Jvb2wgbWlwaV9kc2lfcGFja2V0
X2Zvcm1hdF9pc19zaG9ydCh1OCB0eXBlKTsKK2Jvb2wgbWlwaV9kc2lfcGFja2V0X2Zvcm1hdF9p
c19sb25nKHU4IHR5cGUpOworCisvKioKKyAqIHN0cnVjdCBtaXBpX2RzaV9wYWNrZXQgLSByZXBy
ZXNlbnRzIGEgTUlQSSBEU0kgcGFja2V0IGluIHByb3RvY29sIGZvcm1hdAorICogQHNpemU6IHNp
emUgKGluIGJ5dGVzKSBvZiB0aGUgcGFja2V0CisgKiBAaGVhZGVyOiB0aGUgZm91ciBieXRlcyB0
aGF0IG1ha2UgdXAgdGhlIGhlYWRlciAoRGF0YSBJRCwgV29yZCBDb3VudCBvcgorICogICAgIFBh
Y2tldCBEYXRhLCBhbmQgRUNDKQorICogQHBheWxvYWRfbGVuZ3RoOiBudW1iZXIgb2YgYnl0ZXMg
aW4gdGhlIHBheWxvYWQKKyAqIEBwYXlsb2FkOiBhIHBvaW50ZXIgdG8gYSBidWZmZXIgY29udGFp
bmluZyB0aGUgcGF5bG9hZCwgaWYgYW55CisgKi8KK3N0cnVjdCBtaXBpX2RzaV9wYWNrZXQgewor
CXNpemVfdCBzaXplOworCXU4IGhlYWRlcls0XTsKKwlzaXplX3QgcGF5bG9hZF9sZW5ndGg7CisJ
Y29uc3QgdTggKnBheWxvYWQ7Cit9OworCitpbnQgbWlwaV9kc2lfY3JlYXRlX3BhY2tldChzdHJ1
Y3QgbWlwaV9kc2lfcGFja2V0ICpwYWNrZXQsCisJCQkgICBjb25zdCBzdHJ1Y3QgbWlwaV9kc2lf
bXNnICptc2cpOworCisvKioKKyAqIHN0cnVjdCBtaXBpX2RzaV9ob3N0X29wcyAtIERTSSBidXMg
b3BlcmF0aW9ucworICogQGF0dGFjaDogYXR0YWNoIERTSSBkZXZpY2UgdG8gRFNJIGhvc3QKKyAq
IEBkZXRhY2g6IGRldGFjaCBEU0kgZGV2aWNlIGZyb20gRFNJIGhvc3QKKyAqIEB0cmFuc2Zlcjog
dHJhbnNtaXQgYSBEU0kgcGFja2V0CisgKgorICogRFNJIHBhY2tldHMgdHJhbnNtaXR0ZWQgYnkg
LnRyYW5zZmVyKCkgYXJlIHBhc3NlZCBpbiBhcyBtaXBpX2RzaV9tc2cKKyAqIHN0cnVjdHVyZXMu
IFRoaXMgc3RydWN0dXJlIGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSB0eXBlIG9mIHBh
Y2tldAorICogYmVpbmcgdHJhbnNtaXR0ZWQgYXMgd2VsbCBhcyB0aGUgdHJhbnNtaXQgYW5kIHJl
Y2VpdmUgYnVmZmVycy4gV2hlbiBhbgorICogZXJyb3IgaXMgZW5jb3VudGVyZWQgZHVyaW5nIHRy
YW5zbWlzc2lvbiwgdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiBhCisgKiBuZWdhdGl2ZSBlcnJv
ciBjb2RlLiBPbiBzdWNjZXNzIGl0IHNoYWxsIHJldHVybiB0aGUgbnVtYmVyIG9mIGJ5dGVzCisg
KiB0cmFuc21pdHRlZCBmb3Igd3JpdGUgcGFja2V0cyBvciB0aGUgbnVtYmVyIG9mIGJ5dGVzIHJl
Y2VpdmVkIGZvciByZWFkCisgKiBwYWNrZXRzLgorICoKKyAqIE5vdGUgdGhhdCB0eXBpY2FsbHkg
RFNJIHBhY2tldCB0cmFuc21pc3Npb24gaXMgYXRvbWljLCBzbyB0aGUgLnRyYW5zZmVyKCkKKyAq
IGZ1bmN0aW9uIHdpbGwgc2VsZG9tbHkgcmV0dXJuIGFueXRoaW5nIG90aGVyIHRoYW4gdGhlIG51
bWJlciBvZiBieXRlcworICogY29udGFpbmVkIGluIHRoZSB0cmFuc21pdCBidWZmZXIgb24gc3Vj
Y2Vzcy4KKyAqLworc3RydWN0IG1pcGlfZHNpX2hvc3Rfb3BzIHsKKwlpbnQgKCphdHRhY2gpKHN0
cnVjdCBtaXBpX2RzaV9ob3N0ICpob3N0LAorCQkgICAgICBzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNl
ICpkc2kpOworCWludCAoKmRldGFjaCkoc3RydWN0IG1pcGlfZHNpX2hvc3QgKmhvc3QsCisJCSAg
ICAgIHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSk7CisJc3NpemVfdCAoKnRyYW5zZmVyKShz
dHJ1Y3QgbWlwaV9kc2lfaG9zdCAqaG9zdCwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgbWlwaV9kc2lf
bXNnICptc2cpOworfTsKKworLyoqCisgKiBzdHJ1Y3QgbWlwaV9kc2lfcGh5X29wcyAtIERTSSBo
b3N0IHBoeXNpY2FsIG9wZXJhdGlvbnMKKyAqIEBpbml0OiBpbml0aWFsaXplZCBob3N0IHBoeXNp
Y2FsIHBhcnQKKyAqIEBnZXRfbGFuZV9tYnBzOiBnZXQgbGFuZSBiaXRyYXRlIHBlciBsYW5lICht
YnBzKQorICogQHBvc3Rfc2V0X21vZGU6IG9wZXJhdGlvbiB0aGF0IHNob3VsZCBhZnRlciBzZXQg
bW9kZQorICovCitzdHJ1Y3QgbWlwaV9kc2lfcGh5X29wcyB7CisJaW50ICgqaW5pdCkodm9pZCAq
cHJpdl9kYXRhKTsKKwlpbnQgKCpnZXRfbGFuZV9tYnBzKSh2b2lkICpwcml2X2RhdGEsIHN0cnVj
dCBkaXNwbGF5X3RpbWluZyAqdGltaW5ncywKKwkJCSAgICAgdTMyIGxhbmVzLCB1MzIgZm9ybWF0
LCB1bnNpZ25lZCBpbnQgKmxhbmVfbWJwcyk7CisJdm9pZCAoKnBvc3Rfc2V0X21vZGUpKHZvaWQg
KnByaXZfZGF0YSwgIHVuc2lnbmVkIGxvbmcgbW9kZV9mbGFncyk7Cit9OworCisvKioKKyAqIHN0
cnVjdCBtaXBpX2RzaV9ob3N0IC0gRFNJIGhvc3QgZGV2aWNlCisgKiBAZGV2OiBkcml2ZXIgbW9k
ZWwgZGV2aWNlIG5vZGUgZm9yIHRoaXMgRFNJIGhvc3QKKyAqIEBvcHM6IERTSSBob3N0IG9wZXJh
dGlvbnMKKyAqIEBsaXN0OiBsaXN0IG1hbmFnZW1lbnQKKyAqLworc3RydWN0IG1pcGlfZHNpX2hv
c3QgeworCXN0cnVjdCBkZXZpY2UgKmRldjsKKwljb25zdCBzdHJ1Y3QgbWlwaV9kc2lfaG9zdF9v
cHMgKm9wczsKKwlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7Cit9OworCisvKiBEU0kgbW9kZSBmbGFn
cyAqLworCisvKiB2aWRlbyBtb2RlICovCisjZGVmaW5lIE1JUElfRFNJX01PREVfVklERU8JCUJJ
VCgwKQorLyogdmlkZW8gYnVyc3QgbW9kZSAqLworI2RlZmluZSBNSVBJX0RTSV9NT0RFX1ZJREVP
X0JVUlNUCUJJVCgxKQorLyogdmlkZW8gcHVsc2UgbW9kZSAqLworI2RlZmluZSBNSVBJX0RTSV9N
T0RFX1ZJREVPX1NZTkNfUFVMU0UJQklUKDIpCisvKiBlbmFibGUgYXV0byB2ZXJ0aWNhbCBjb3Vu
dCBtb2RlICovCisjZGVmaW5lIE1JUElfRFNJX01PREVfVklERU9fQVVUT19WRVJUCUJJVCgzKQor
LyogZW5hYmxlIGhzeW5jLWVuZCBwYWNrZXRzIGluIHZzeW5jLXB1bHNlIGFuZCB2LXBvcmNoIGFy
ZWEgKi8KKyNkZWZpbmUgTUlQSV9EU0lfTU9ERV9WSURFT19IU0UJCUJJVCg0KQorLyogZGlzYWJs
ZSBoZnJvbnQtcG9yY2ggYXJlYSAqLworI2RlZmluZSBNSVBJX0RTSV9NT0RFX1ZJREVPX0hGUAkJ
QklUKDUpCisvKiBkaXNhYmxlIGhiYWNrLXBvcmNoIGFyZWEgKi8KKyNkZWZpbmUgTUlQSV9EU0lf
TU9ERV9WSURFT19IQlAJCUJJVCg2KQorLyogZGlzYWJsZSBoc3luYy1hY3RpdmUgYXJlYSAqLwor
I2RlZmluZSBNSVBJX0RTSV9NT0RFX1ZJREVPX0hTQQkJQklUKDcpCisvKiBmbHVzaCBkaXNwbGF5
IEZJRk8gb24gdnN5bmMgcHVsc2UgKi8KKyNkZWZpbmUgTUlQSV9EU0lfTU9ERV9WU1lOQ19GTFVT
SAlCSVQoOCkKKy8qIGRpc2FibGUgRW9UIHBhY2tldHMgaW4gSFMgbW9kZSAqLworI2RlZmluZSBN
SVBJX0RTSV9NT0RFX0VPVF9QQUNLRVQJQklUKDkpCisvKiBkZXZpY2Ugc3VwcG9ydHMgbm9uLWNv
bnRpbnVvdXMgY2xvY2sgYmVoYXZpb3IgKERTSSBzcGVjIDUuNi4xKSAqLworI2RlZmluZSBNSVBJ
X0RTSV9DTE9DS19OT05fQ09OVElOVU9VUwlCSVQoMTApCisvKiB0cmFuc21pdCBkYXRhIGluIGxv
dyBwb3dlciAqLworI2RlZmluZSBNSVBJX0RTSV9NT0RFX0xQTQkJQklUKDExKQorCitlbnVtIG1p
cGlfZHNpX3BpeGVsX2Zvcm1hdCB7CisJTUlQSV9EU0lfRk1UX1JHQjg4OCwKKwlNSVBJX0RTSV9G
TVRfUkdCNjY2LAorCU1JUElfRFNJX0ZNVF9SR0I2NjZfUEFDS0VELAorCU1JUElfRFNJX0ZNVF9S
R0I1NjUsCit9OworCisjZGVmaW5lIERTSV9ERVZfTkFNRV9TSVpFCQkyMAorCisvKioKKyAqIHN0
cnVjdCBtaXBpX2RzaV9kZXZpY2VfaW5mbyAtIHRlbXBsYXRlIGZvciBjcmVhdGluZyBhIG1pcGlf
ZHNpX2RldmljZQorICogQHR5cGU6IERTSSBwZXJpcGhlcmFsIGNoaXAgdHlwZQorICogQGNoYW5u
ZWw6IERTSSB2aXJ0dWFsIGNoYW5uZWwgYXNzaWduZWQgdG8gcGVyaXBoZXJhbAorICogQG5vZGU6
IHBvaW50ZXIgdG8gT0YgZGV2aWNlIG5vZGUgb3IgTlVMTAorICoKKyAqIFRoaXMgaXMgcG9wdWxh
dGVkIGFuZCBwYXNzZWQgdG8gbWlwaV9kc2lfZGV2aWNlX25ldyB0byBjcmVhdGUgYSBuZXcKKyAq
IERTSSBkZXZpY2UKKyAqLworc3RydWN0IG1pcGlfZHNpX2RldmljZV9pbmZvIHsKKwljaGFyIHR5
cGVbRFNJX0RFVl9OQU1FX1NJWkVdOworCXUzMiBjaGFubmVsOworCXN0cnVjdCBkZXZpY2Vfbm9k
ZSAqbm9kZTsKK307CisKKy8qKgorICogc3RydWN0IG1pcGlfZHNpX2RldmljZSAtIERTSSBwZXJp
cGhlcmFsIGRldmljZQorICogQGhvc3Q6IERTSSBob3N0IGZvciB0aGlzIHBlcmlwaGVyYWwKKyAq
IEBkZXY6IGRyaXZlciBtb2RlbCBkZXZpY2Ugbm9kZSBmb3IgdGhpcyBwZXJpcGhlcmFsCisgKiBA
bmFtZTogRFNJIHBlcmlwaGVyYWwgY2hpcCB0eXBlCisgKiBAY2hhbm5lbDogdmlydHVhbCBjaGFu
bmVsIGFzc2lnbmVkIHRvIHRoZSBwZXJpcGhlcmFsCisgKiBAZm9ybWF0OiBwaXhlbCBmb3JtYXQg
Zm9yIHZpZGVvIG1vZGUKKyAqIEBsYW5lczogbnVtYmVyIG9mIGFjdGl2ZSBkYXRhIGxhbmVzCisg
KiBAbW9kZV9mbGFnczogRFNJIG9wZXJhdGlvbiBtb2RlIHJlbGF0ZWQgZmxhZ3MKKyAqLworc3Ry
dWN0IG1pcGlfZHNpX2RldmljZSB7CisJc3RydWN0IG1pcGlfZHNpX2hvc3QgKmhvc3Q7CisJc3Ry
dWN0IHVkZXZpY2UgKmRldjsKKworCWNoYXIgbmFtZVtEU0lfREVWX05BTUVfU0laRV07CisJdW5z
aWduZWQgaW50IGNoYW5uZWw7CisJdW5zaWduZWQgaW50IGxhbmVzOworCWVudW0gbWlwaV9kc2lf
cGl4ZWxfZm9ybWF0IGZvcm1hdDsKKwl1bnNpZ25lZCBsb25nIG1vZGVfZmxhZ3M7Cit9OworCisv
KioKKyAqIG1pcGlfZHNpX3BpeGVsX2Zvcm1hdF90b19icHAgLSBvYnRhaW4gdGhlIG51bWJlciBv
ZiBiaXRzIHBlciBwaXhlbCBmb3IgYW55CisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgZ2l2ZW4gcGl4ZWwgZm9ybWF0IGRlZmluZWQgYnkgdGhlIE1JUEkgRFNJCisgKiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgc3BlY2lmaWNhdGlvbgorICogQGZtdDogTUlQSSBEU0kg
cGl4ZWwgZm9ybWF0CisgKgorICogUmV0dXJuczogVGhlIG51bWJlciBvZiBiaXRzIHBlciBwaXhl
bCBvZiB0aGUgZ2l2ZW4gcGl4ZWwgZm9ybWF0LgorICovCitzdGF0aWMgaW5saW5lIGludCBtaXBp
X2RzaV9waXhlbF9mb3JtYXRfdG9fYnBwKGVudW0gbWlwaV9kc2lfcGl4ZWxfZm9ybWF0IGZtdCkK
K3sKKwlzd2l0Y2ggKGZtdCkgeworCWNhc2UgTUlQSV9EU0lfRk1UX1JHQjg4ODoKKwljYXNlIE1J
UElfRFNJX0ZNVF9SR0I2NjY6CisJCXJldHVybiAyNDsKKworCWNhc2UgTUlQSV9EU0lfRk1UX1JH
QjY2Nl9QQUNLRUQ6CisJCXJldHVybiAxODsKKworCWNhc2UgTUlQSV9EU0lfRk1UX1JHQjU2NToK
KwkJcmV0dXJuIDE2OworCX0KKworCXJldHVybiAtRUlOVkFMOworfQorCisvKioKKyAqIHN0cnVj
dCBtaXBpX2RzaV9wYW5lbF9wbGF0IC0gRFNJIHBhbmVsIHBsYXRmb3JtIGRhdGEKKyAqIEBkZXZp
Y2U6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICovCitzdHJ1Y3QgbWlwaV9kc2lfcGFuZWxfcGxh
dCB7CisJc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZGV2aWNlOworfTsKKworLyoqCisgKiBtaXBp
X2RzaV9hdHRhY2ggLSBhdHRhY2ggYSBEU0kgZGV2aWNlIHRvIGl0cyBEU0kgaG9zdAorICogQGRz
aTogRFNJIHBlcmlwaGVyYWwKKyAqLworaW50IG1pcGlfZHNpX2F0dGFjaChzdHJ1Y3QgbWlwaV9k
c2lfZGV2aWNlICpkc2kpOworCisvKioKKyAqIG1pcGlfZHNpX2RldGFjaCAtIGRldGFjaCBhIERT
SSBkZXZpY2UgZnJvbSBpdHMgRFNJIGhvc3QKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsCisgKi8K
K2ludCBtaXBpX2RzaV9kZXRhY2goc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpKTsKK2ludCBt
aXBpX2RzaV9zaHV0ZG93bl9wZXJpcGhlcmFsKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSk7
CitpbnQgbWlwaV9kc2lfdHVybl9vbl9wZXJpcGhlcmFsKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2Ug
KmRzaSk7CitpbnQgbWlwaV9kc2lfc2V0X21heGltdW1fcmV0dXJuX3BhY2tldF9zaXplKHN0cnVj
dCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwKKwkJCQkJICAgIHUxNiB2YWx1ZSk7CisKK3NzaXplX3Qg
bWlwaV9kc2lfZ2VuZXJpY193cml0ZShzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2ksIGNvbnN0
IHZvaWQgKnBheWxvYWQsCisJCQkgICAgICAgc2l6ZV90IHNpemUpOworc3NpemVfdCBtaXBpX2Rz
aV9nZW5lcmljX3JlYWQoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpLCBjb25zdCB2b2lkICpw
YXJhbXMsCisJCQkgICAgICBzaXplX3QgbnVtX3BhcmFtcywgdm9pZCAqZGF0YSwgc2l6ZV90IHNp
emUpOworCisvKioKKyAqIGVudW0gbWlwaV9kc2lfZGNzX3RlYXJfbW9kZSAtIFRlYXJpbmcgRWZm
ZWN0IE91dHB1dCBMaW5lIG1vZGUKKyAqIEBNSVBJX0RTSV9EQ1NfVEVBUl9NT0RFX1ZCTEFOSzog
dGhlIFRFIG91dHB1dCBsaW5lIGNvbnNpc3RzIG9mIFYtQmxhbmtpbmcKKyAqICAgIGluZm9ybWF0
aW9uIG9ubHkKKyAqIEBNSVBJX0RTSV9EQ1NfVEVBUl9NT0RFX1ZIQkxBTksgOiB0aGUgVEUgb3V0
cHV0IGxpbmUgY29uc2lzdHMgb2YgYm90aAorICogICAgVi1CbGFua2luZyBhbmQgSC1CbGFua2lu
ZyBpbmZvcm1hdGlvbgorICovCitlbnVtIG1pcGlfZHNpX2Rjc190ZWFyX21vZGUgeworCU1JUElf
RFNJX0RDU19URUFSX01PREVfVkJMQU5LLAorCU1JUElfRFNJX0RDU19URUFSX01PREVfVkhCTEFO
SywKK307CisKKyNkZWZpbmUgTUlQSV9EU0lfRENTX1BPV0VSX01PREVfRElTUExBWSBCSVQoMikK
KyNkZWZpbmUgTUlQSV9EU0lfRENTX1BPV0VSX01PREVfTk9STUFMICBCSVQoMykKKyNkZWZpbmUg
TUlQSV9EU0lfRENTX1BPV0VSX01PREVfU0xFRVAgICBCSVQoNCkKKyNkZWZpbmUgTUlQSV9EU0lf
RENTX1BPV0VSX01PREVfUEFSVElBTCBCSVQoNSkKKyNkZWZpbmUgTUlQSV9EU0lfRENTX1BPV0VS
X01PREVfSURMRSAgICBCSVQoNikKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfd3JpdGVfYnVmZmVy
KCkgLSB0cmFuc21pdCBhIERDUyBjb21tYW5kIHdpdGggcGF5bG9hZAorICogQGRzaTogRFNJIHBl
cmlwaGVyYWwgZGV2aWNlCisgKiBAZGF0YTogYnVmZmVyIGNvbnRhaW5pbmcgZGF0YSB0byBiZSB0
cmFuc21pdHRlZAorICogQGxlbjogc2l6ZSBvZiB0cmFuc21pc3Npb24gYnVmZmVyCisgKgorICog
VGhpcyBmdW5jdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgY2hvb3NlIHRoZSByaWdodCBkYXRhIHR5
cGUgZGVwZW5kaW5nIG9uCisgKiB0aGUgY29tbWFuZCBwYXlsb2FkIGxlbmd0aC4KKyAqCisgKiBS
ZXR1cm46IFRoZSBudW1iZXIgb2YgYnl0ZXMgc3VjY2Vzc2Z1bGx5IHRyYW5zbWl0dGVkIG9yIGEg
bmVnYXRpdmUgZXJyb3IKKyAqIGNvZGUgb24gZmFpbHVyZS4KKyAqLworc3NpemVfdCBtaXBpX2Rz
aV9kY3Nfd3JpdGVfYnVmZmVyKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwKKwkJCQkgIGNv
bnN0IHZvaWQgKmRhdGEsIHNpemVfdCBsZW4pOworCisvKioKKyAqIG1pcGlfZHNpX2Rjc193cml0
ZSgpIC0gc2VuZCBEQ1Mgd3JpdGUgY29tbWFuZAorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2
aWNlCisgKiBAY21kOiBEQ1MgY29tbWFuZAorICogQGRhdGE6IGJ1ZmZlciBjb250YWluaW5nIHRo
ZSBjb21tYW5kIHBheWxvYWQKKyAqIEBsZW46IGNvbW1hbmQgcGF5bG9hZCBsZW5ndGgKKyAqCisg
KiBUaGlzIGZ1bmN0aW9uIHdpbGwgYXV0b21hdGljYWxseSBjaG9vc2UgdGhlIHJpZ2h0IGRhdGEg
dHlwZSBkZXBlbmRpbmcgb24KKyAqIHRoZSBjb21tYW5kIHBheWxvYWQgbGVuZ3RoLgorCisgKiBj
b2RlIG9uIGZhaWx1cmUuCisgKi8KK3NzaXplX3QgbWlwaV9kc2lfZGNzX3dyaXRlKHN0cnVjdCBt
aXBpX2RzaV9kZXZpY2UgKmRzaSwgdTggY21kLAorCQkJICAgY29uc3Qgdm9pZCAqZGF0YSwgc2l6
ZV90IGxlbik7CisKKy8qKgorICogbWlwaV9kc2lfZGNzX3JlYWQoKSAtIHNlbmQgRENTIHJlYWQg
cmVxdWVzdCBjb21tYW5kCisgKiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqIEBjbWQ6
IERDUyBjb21tYW5kCisgKiBAZGF0YTogYnVmZmVyIGluIHdoaWNoIHRvIHJlY2VpdmUgZGF0YQor
ICogQGxlbjogc2l6ZSBvZiByZWNlaXZlIGJ1ZmZlcgorICoKKyAqIFJldHVybjogVGhlIG51bWJl
ciBvZiBieXRlcyByZWFkIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlLgorICov
Citzc2l6ZV90IG1pcGlfZHNpX2Rjc19yZWFkKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSwg
dTggY21kLCB2b2lkICpkYXRhLAorCQkJICBzaXplX3QgbGVuKTsKKworLyoqCisgKiBtaXBpX2Rz
aV9kY3Nfbm9wKCkgLSBzZW5kIERDUyBub3AgcGFja2V0CisgKiBAZHNpOiBEU0kgcGVyaXBoZXJh
bCBkZXZpY2UKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9y
IGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19ub3Aoc3RydWN0IG1pcGlf
ZHNpX2RldmljZSAqZHNpKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc29mdF9yZXNldCgpIC0g
cGVyZm9ybSBhIHNvZnR3YXJlIHJlc2V0IG9mIHRoZSBkaXNwbGF5IG1vZHVsZQorICogQGRzaTog
RFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBu
ZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKi8KK2ludCBtaXBpX2RzaV9kY3Nfc29m
dF9yZXNldChzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpOworCisvKioKKyAqIG1pcGlfZHNp
X2Rjc19nZXRfcG93ZXJfbW9kZSgpIC0gcXVlcnkgdGhlIGRpc3BsYXkgbW9kdWxlJ3MgY3VycmVu
dCBwb3dlcgorICogICAgbW9kZQorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKiBA
bW9kZTogcmV0dXJuIGxvY2F0aW9uIGZvciB0aGUgY3VycmVudCBwb3dlciBtb2RlCisgKgorICog
UmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUu
CisgKi8KK2ludCBtaXBpX2RzaV9kY3NfZ2V0X3Bvd2VyX21vZGUoc3RydWN0IG1pcGlfZHNpX2Rl
dmljZSAqZHNpLCB1OCAqbW9kZSk7CisKKy8qKgorICogbWlwaV9kc2lfZGNzX2dldF9waXhlbF9m
b3JtYXQoKSAtIGdldHMgdGhlIHBpeGVsIGZvcm1hdCBmb3IgdGhlIFJHQiBpbWFnZQorICogICAg
ZGF0YSB1c2VkIGJ5IHRoZSBpbnRlcmZhY2UKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmlj
ZQorICogQGZvcm1hdDogcmV0dXJuIGxvY2F0aW9uIGZvciB0aGUgcGl4ZWwgZm9ybWF0CisgKgor
ICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1
cmUuCisgKi8KK2ludCBtaXBpX2RzaV9kY3NfZ2V0X3BpeGVsX2Zvcm1hdChzdHJ1Y3QgbWlwaV9k
c2lfZGV2aWNlICpkc2ksIHU4ICpmb3JtYXQpOworCisvKioKKyAqIG1pcGlfZHNpX2Rjc19lbnRl
cl9zbGVlcF9tb2RlKCkgLSBkaXNhYmxlIGFsbCB1bm5lY2Vzc2FyeSBibG9ja3MgaW5zaWRlIHRo
ZQorICogICAgZGlzcGxheSBtb2R1bGUgZXhjZXB0IGludGVyZmFjZSBjb21tdW5pY2F0aW9uCisg
KiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2Vz
cyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNp
X2Rjc19lbnRlcl9zbGVlcF9tb2RlKHN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRzaSk7CisKKy8q
KgorICogbWlwaV9kc2lfZGNzX2V4aXRfc2xlZXBfbW9kZSgpIC0gZW5hYmxlIGFsbCBibG9ja3Mg
aW5zaWRlIHRoZSBkaXNwbGF5CisgKiAgICBtb2R1bGUKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFs
IGRldmljZQorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3Ig
Y29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlwaV9kc2lfZGNzX2V4aXRfc2xlZXBfbW9kZShz
dHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpOworCisvKioKKyAqIG1pcGlfZHNpX2Rjc19zZXRf
ZGlzcGxheV9vZmYoKSAtIHN0b3AgZGlzcGxheWluZyB0aGUgaW1hZ2UgZGF0YSBvbiB0aGUKKyAq
ICAgIGRpc3BsYXkgZGV2aWNlCisgKiBAZHNpOiBEU0kgcGVyaXBoZXJhbCBkZXZpY2UKKyAqCisg
KiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVy
ZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfZGlzcGxheV9vZmYoc3RydWN0IG1pcGlfZHNp
X2RldmljZSAqZHNpKTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0X2Rpc3BsYXlfb24oKSAt
IHN0YXJ0IGRpc3BsYXlpbmcgdGhlIGltYWdlIGRhdGEgb24gdGhlCisgKiAgICBkaXNwbGF5IGRl
dmljZQorICogQGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKgorICogUmV0dXJuOiAwIG9u
IHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUKKyAqLworaW50IG1p
cGlfZHNpX2Rjc19zZXRfZGlzcGxheV9vbihzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkc2kpOwor
CisvKioKKyAqIG1pcGlfZHNpX2Rjc19zZXRfY29sdW1uX2FkZHJlc3MoKSAtIGRlZmluZSB0aGUg
Y29sdW1uIGV4dGVudCBvZiB0aGUgZnJhbWUKKyAqICAgIG1lbW9yeSBhY2Nlc3NlZCBieSB0aGUg
aG9zdCBwcm9jZXNzb3IKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICogQHN0YXJ0
OiBmaXJzdCBjb2x1bW4gb2YgZnJhbWUgbWVtb3J5CisgKiBAZW5kOiBsYXN0IGNvbHVtbiBvZiBm
cmFtZSBtZW1vcnkKKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVy
cm9yIGNvZGUgb24gZmFpbHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfY29sdW1uX2Fk
ZHJlc3Moc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpLCB1MTYgc3RhcnQsCisJCQkJICAgIHUx
NiBlbmQpOworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0X3BhZ2VfYWRkcmVzcygpIC0gZGVmaW5l
IHRoZSBwYWdlIGV4dGVudCBvZiB0aGUgZnJhbWUKKyAqICAgIG1lbW9yeSBhY2Nlc3NlZCBieSB0
aGUgaG9zdCBwcm9jZXNzb3IKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICogQHN0
YXJ0OiBmaXJzdCBwYWdlIG9mIGZyYW1lIG1lbW9yeQorICogQGVuZDogbGFzdCBwYWdlIG9mIGZy
YW1lIG1lbW9yeQorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJy
b3IgY29kZSBvbiBmYWlsdXJlLgorICovCitpbnQgbWlwaV9kc2lfZGNzX3NldF9wYWdlX2FkZHJl
c3Moc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpLCB1MTYgc3RhcnQsCisJCQkJICB1MTYgZW5k
KTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0X3RlYXJfb2ZmKCkgLSB0dXJuIG9mZiB0aGUg
ZGlzcGxheSBtb2R1bGUncyBUZWFyaW5nIEVmZmVjdAorICogICAgb3V0cHV0IHNpZ25hbCBvbiB0
aGUgVEUgc2lnbmFsIGxpbmUKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICoKKyAq
IFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJl
CisgKi8KK2ludCBtaXBpX2RzaV9kY3Nfc2V0X3RlYXJfb2ZmKHN0cnVjdCBtaXBpX2RzaV9kZXZp
Y2UgKmRzaSk7CisKKy8qKgorICogbWlwaV9kc2lfZGNzX3NldF90ZWFyX29uKCkgLSB0dXJuIG9u
IHRoZSBkaXNwbGF5IG1vZHVsZSdzIFRlYXJpbmcgRWZmZWN0CisgKiAgICBvdXRwdXQgc2lnbmFs
IG9uIHRoZSBURSBzaWduYWwgbGluZS4KKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQor
ICogQG1vZGU6IHRoZSBUZWFyaW5nIEVmZmVjdCBPdXRwdXQgTGluZSBtb2RlCisgKgorICogUmV0
dXJuOiAwIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUKKyAq
LworaW50IG1pcGlfZHNpX2Rjc19zZXRfdGVhcl9vbihzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpk
c2ksCisJCQkgICAgIGVudW0gbWlwaV9kc2lfZGNzX3RlYXJfbW9kZSBtb2RlKTsKKworLyoqCisg
KiBtaXBpX2RzaV9kY3Nfc2V0X3BpeGVsX2Zvcm1hdCgpIC0gc2V0cyB0aGUgcGl4ZWwgZm9ybWF0
IGZvciB0aGUgUkdCIGltYWdlCisgKiAgICBkYXRhIHVzZWQgYnkgdGhlIGludGVyZmFjZQorICog
QGRzaTogRFNJIHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAZm9ybWF0OiBwaXhlbCBmb3JtYXQKKyAq
CisgKiBSZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFp
bHVyZS4KKyAqLworaW50IG1pcGlfZHNpX2Rjc19zZXRfcGl4ZWxfZm9ybWF0KHN0cnVjdCBtaXBp
X2RzaV9kZXZpY2UgKmRzaSwgdTggZm9ybWF0KTsKKworLyoqCisgKiBtaXBpX2RzaV9kY3Nfc2V0
X3RlYXJfc2NhbmxpbmUoKSAtIHNldCB0aGUgc2NhbmxpbmUgdG8gdXNlIGFzIHRyaWdnZXIgZm9y
CisgKiAgICB0aGUgVGVhcmluZyBFZmZlY3Qgb3V0cHV0IHNpZ25hbCBvZiB0aGUgZGlzcGxheSBt
b2R1bGUKKyAqIEBkc2k6IERTSSBwZXJpcGhlcmFsIGRldmljZQorICogQHNjYW5saW5lOiBzY2Fu
bGluZSB0byB1c2UgYXMgdHJpZ2dlcgorICoKKyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEg
bmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWlsdXJlCisgKi8KK2ludCBtaXBpX2RzaV9kY3Nfc2V0
X3RlYXJfc2NhbmxpbmUoc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpLCB1MTYgc2NhbmxpbmUp
OworCisvKioKKyAqIG1pcGlfZHNpX2Rjc19zZXRfZGlzcGxheV9icmlnaHRuZXNzKCkgLSBzZXRz
IHRoZSBicmlnaHRuZXNzIHZhbHVlIG9mIHRoZQorICogICAgZGlzcGxheQorICogQGRzaTogRFNJ
IHBlcmlwaGVyYWwgZGV2aWNlCisgKiBAYnJpZ2h0bmVzczogYnJpZ2h0bmVzcyB2YWx1ZQorICoK
KyAqIFJldHVybjogMCBvbiBzdWNjZXNzIG9yIGEgbmVnYXRpdmUgZXJyb3IgY29kZSBvbiBmYWls
dXJlLgorICovCitpbnQgbWlwaV9kc2lfZGNzX3NldF9kaXNwbGF5X2JyaWdodG5lc3Moc3RydWN0
IG1pcGlfZHNpX2RldmljZSAqZHNpLAorCQkJCQl1MTYgYnJpZ2h0bmVzcyk7CisKKy8qKgorICog
bWlwaV9kc2lfZGNzX2dldF9kaXNwbGF5X2JyaWdodG5lc3MoKSAtIGdldHMgdGhlIGN1cnJlbnQg
YnJpZ2h0bmVzcyB2YWx1ZQorICogICAgb2YgdGhlIGRpc3BsYXkKKyAqIEBkc2k6IERTSSBwZXJp
cGhlcmFsIGRldmljZQorICogQGJyaWdodG5lc3M6IGJyaWdodG5lc3MgdmFsdWUKKyAqCisgKiBS
ZXR1cm46IDAgb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9yIGNvZGUgb24gZmFpbHVyZS4K
KyAqLworaW50IG1pcGlfZHNpX2Rjc19nZXRfZGlzcGxheV9icmlnaHRuZXNzKHN0cnVjdCBtaXBp
X2RzaV9kZXZpY2UgKmRzaSwKKwkJCQkJdTE2ICpicmlnaHRuZXNzKTsKKworI2VuZGlmIC8qIE1J
UElfRFNJX0ggKi8KLS0gCjIuNy40CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpVYm9vdC1zdG0zMiBtYWlsaW5nIGxpc3QKVWJvb3Qtc3RtMzJAc3QtbWQt
bWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5j
b20vbWFpbG1hbi9saXN0aW5mby91Ym9vdC1zdG0zMgo=
