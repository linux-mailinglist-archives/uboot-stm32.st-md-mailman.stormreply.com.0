Return-Path: <uboot-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+uboot-stm32@lfdr.de
Delivered-To: lists+uboot-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id B1CCFCE3A4
	for <lists+uboot-stm32@lfdr.de>; Mon,  7 Oct 2019 15:29:44 +0200 (CEST)
Received: from ip-172-31-3-76.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 7EB51C36B0D
	for <lists+uboot-stm32@lfdr.de>; Mon,  7 Oct 2019 13:29:44 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx08-00178001.pphosted.com
 [91.207.212.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 9E94DC36B0A
 for <uboot-stm32@st-md-mailman.stormreply.com>;
 Mon,  7 Oct 2019 13:29:42 +0000 (UTC)
Received: from pps.filterd (m0046661.ppops.net [127.0.0.1])
 by mx08-00178001.pphosted.com (8.16.0.42/8.16.0.42) with SMTP id
 x97DKpKa011728; Mon, 7 Oct 2019 15:29:38 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=st.com;
 h=from : to : subject :
 date : message-id : in-reply-to : references : mime-version : content-type
 : content-transfer-encoding; s=STMicroelectronics;
 bh=fxWt29I9elkQ670ElMeSSsbRnGO8jJ26CGnLXwcbyPo=;
 b=051lJBYQLzvcQvm3kK3PbCXE3Y9vhv/T6LbWjYhDRzONIA84RPDoRIfOv86Z2L+akoEs
 Um0r9aQjMLzPbKwAA4VWzV6j5L6P7LYIZ9ZXx2x5BDrN0DPq3tx/zJGCu3MlZZw8Rpii
 52m9jPHyHorAj89G1T5wexxBCszTOvVt4pdIy5tAwMruxd6Ebv/taz639d/IxeBPqv6L
 nIUXN81XyMqjAR1QVRHe2OjqtXPflgASSkK91i5OnxgO65AJi76TIsKWSqvNV2cnoLf2
 vC+Bc1NAi2/0oTyvimgb1rMWs9Xl320vqPl0Np3ej9TjY49HL8gz33Nd3Ym8iVpOkAtr vQ== 
Received: from beta.dmz-eu.st.com (beta.dmz-eu.st.com [164.129.1.35])
 by mx08-00178001.pphosted.com with ESMTP id 2vej2p2jjy-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 07 Oct 2019 15:29:38 +0200
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-eu.st.com (STMicroelectronics) with ESMTP id 4DD9610002A;
 Mon,  7 Oct 2019 15:29:37 +0200 (CEST)
Received: from Webmail-eu.st.com (Safex1hubcas24.st.com [10.75.90.94])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 42A4E2BFE06;
 Mon,  7 Oct 2019 15:29:37 +0200 (CEST)
Received: from SAFEX1HUBCAS22.st.com (10.75.90.93) by Safex1hubcas24.st.com
 (10.75.90.94) with Microsoft SMTP Server (TLS) id 14.3.439.0; Mon, 7 Oct 2019
 15:29:37 +0200
Received: from localhost (10.201.23.97) by Webmail-ga.st.com (10.75.90.48)
 with Microsoft SMTP Server (TLS) id 14.3.439.0; Mon, 7 Oct 2019 15:29:36
 +0200
From: =?UTF-8?q?Yannick=20Fertr=C3=A9?= <yannick.fertre@st.com>
To: Vikas Manocha <vikas.manocha@st.com>, Benjamin Gaignard
 <benjamin.gaignard@st.com>, Albert Aribaud <albert.u.boot@aribaud.net>,
 Patrick Delaunay <patrick.delaunay@st.com>,
 Simon Glass <sjg@chromium.org>, Anatolij Gustschin <agust@denx.de>,
 Patrice Chotard <patrice.chotard@st.com>,
 Yannick Fertre <yannick.fertre@st.com>, Philippe Cornu
 <philippe.cornu@st.com>, Jens Wiklander <jens.wiklander@linaro.org>, "Eugen
 Hristev" <eugen.hristev@microchip.com>, Heinrich Schuchardt
 <xypron.glpk@gmx.de>, Simon Goldschmidt <simon.k.r.goldschmidt@gmail.com>,
 <u-boot@lists.denx.de>, <uboot-stm32@st-md-mailman.stormreply.com>
Date: Mon, 7 Oct 2019 15:29:07 +0200
Message-ID: <1570454955-21298-8-git-send-email-yannick.fertre@st.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1570454955-21298-1-git-send-email-yannick.fertre@st.com>
References: <1570454955-21298-1-git-send-email-yannick.fertre@st.com>
MIME-Version: 1.0
X-Originating-IP: [10.201.23.97]
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:6.0.95,1.0.8
 definitions=2019-10-07_02:2019-10-07,2019-10-07 signatures=0
Subject: [Uboot-stm32] [PATCH v5 07/15] video: add support of STM32 MIPI DSI
	controller driver
X-BeenThere: uboot-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <uboot-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/uboot-stm32/>
List-Post: <mailto:uboot-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/uboot-stm32>, 
 <mailto:uboot-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: uboot-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Uboot-stm32" <uboot-stm32-bounces@st-md-mailman.stormreply.com>

QWRkIHRoZSBTVE0zMiBEU0kgY29udHJvbGxlciBkcml2ZXIgdGhhdCB1c2VzIHRoZSBTeW5vcHN5
cyBEZXNpZ25XYXJlCk1JUEkgRFNJIGhvc3QgY29udHJvbGxlciBicmlkZ2UuCgpTaWduZWQtb2Zm
LWJ5OiBZYW5uaWNrIEZlcnRyw6kgPHlhbm5pY2suZmVydHJlQHN0LmNvbT4KLS0tCiBkcml2ZXJz
L3ZpZGVvL3N0bTMyL0tjb25maWcgICAgIHwgICA5ICsKIGRyaXZlcnMvdmlkZW8vc3RtMzIvTWFr
ZWZpbGUgICAgfCAgIDEgKwogZHJpdmVycy92aWRlby9zdG0zMi9zdG0zMl9kc2kuYyB8IDQ5MCAr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiAzIGZpbGVzIGNoYW5nZWQs
IDUwMCBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy92aWRlby9zdG0z
Mi9zdG0zMl9kc2kuYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmlkZW8vc3RtMzIvS2NvbmZpZyBi
L2RyaXZlcnMvdmlkZW8vc3RtMzIvS2NvbmZpZwppbmRleCA3OGIxZmFjLi45NWQ1MWJiIDEwMDY0
NAotLS0gYS9kcml2ZXJzL3ZpZGVvL3N0bTMyL0tjb25maWcKKysrIGIvZHJpdmVycy92aWRlby9z
dG0zMi9LY29uZmlnCkBAIC0xMyw2ICsxMywxNSBAQCBtZW51Y29uZmlnIFZJREVPX1NUTTMyCiAJ
ICBEU0kuIFRoaXMgb3B0aW9uIGVuYWJsZXMgdGhlc2Ugc3VwcG9ydHMgd2hpY2ggY2FuIGJlIHVz
ZWQgb24KIAkgIGRldmljZXMgd2hpY2ggaGF2ZSBSR0IgVEZUIG9yIERTSSBkaXNwbGF5IGNvbm5l
Y3RlZC4KIAorY29uZmlnIFZJREVPX1NUTTMyX0RTSQorCWJvb2wgIkVuYWJsZSBTVE0zMiBEU0kg
dmlkZW8gc3VwcG9ydCIKKwlkZXBlbmRzIG9uIFZJREVPX1NUTTMyCisJc2VsZWN0IFZJREVPX0JS
SURHRQorCXNlbGVjdCBWSURFT19EV19NSVBJX0RTSQorCWhlbHAKKwkgIFRoaXMgb3B0aW9uIGVu
YWJsZXMgc3VwcG9ydCBEU0kgaW50ZXJuYWwgYnJpZGdlIHdoaWNoIGNhbiBiZSB1c2VkIG9uCisJ
ICBkZXZpY2VzIHdoaWNoIGhhdmUgRFNJIGRldmljZXMgY29ubmVjdGVkLgorCiBjb25maWcgVklE
RU9fU1RNMzJfTUFYX1hSRVMKIAlpbnQgIk1heGltdW0gaG9yaXpvbnRhbCByZXNvbHV0aW9uIChm
b3IgbWVtb3J5IGFsbG9jYXRpb24gcHVycG9zZXMpIgogCWRlcGVuZHMgb24gVklERU9fU1RNMzIK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmlkZW8vc3RtMzIvTWFrZWZpbGUgYi9kcml2ZXJzL3ZpZGVv
L3N0bTMyL01ha2VmaWxlCmluZGV4IDcyOTdlNWYuLmY4YjQyZDEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdmlkZW8vc3RtMzIvTWFrZWZpbGUKKysrIGIvZHJpdmVycy92aWRlby9zdG0zMi9NYWtlZmls
ZQpAQCAtNiwzICs2LDQgQEAKICMgICAgICAgICAgWWFubmljayBGZXJ0cmUgPHlhbm5pY2suZmVy
dHJlQHN0LmNvbT4KIAogb2JqLSR7Q09ORklHX1ZJREVPX1NUTTMyfSA9IHN0bTMyX2x0ZGMubwor
b2JqLSR7Q09ORklHX1ZJREVPX1NUTTMyX0RTSX0gKz0gc3RtMzJfZHNpLm8KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdmlkZW8vc3RtMzIvc3RtMzJfZHNpLmMgYi9kcml2ZXJzL3ZpZGVvL3N0bTMyL3N0
bTMyX2RzaS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmNiODk1NzYKLS0t
IC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL3ZpZGVvL3N0bTMyL3N0bTMyX2RzaS5jCkBAIC0wLDAg
KzEsNDkwIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCsKKy8qCisgKiBD
b3B5cmlnaHQgKEMpIDIwMTkgU1RNaWNyb2VsZWN0cm9uaWNzIC0gQWxsIFJpZ2h0cyBSZXNlcnZl
ZAorICogQXV0aG9yKHMpOiBQaGlsaXBwZSBDb3JudSA8cGhpbGlwcGUuY29ybnVAc3QuY29tPiBm
b3IgU1RNaWNyb2VsZWN0cm9uaWNzLgorICoJICAgICAgWWFubmljayBGZXJ0cmUgPHlhbm5pY2su
ZmVydHJlQHN0LmNvbT4gZm9yIFNUTWljcm9lbGVjdHJvbmljcy4KKyAqCisgKiBUaGlzIE1JUEkg
RFNJIGNvbnRyb2xsZXIgZHJpdmVyIGlzIGJhc2VkIG9uIHRoZSBMaW51eCBLZXJuZWwgZHJpdmVy
IGZyb20KKyAqIGRyaXZlcnMvZ3B1L2RybS9zdG0vZHdfbWlwaV9kc2ktc3RtLmMuCisgKi8KKwor
I2luY2x1ZGUgPGNvbW1vbi5oPgorI2luY2x1ZGUgPGNsay5oPgorI2luY2x1ZGUgPGRtLmg+Cisj
aW5jbHVkZSA8ZHNpX2hvc3QuaD4KKyNpbmNsdWRlIDxtaXBpX2RzaS5oPgorI2luY2x1ZGUgPHBh
bmVsLmg+CisjaW5jbHVkZSA8cmVzZXQuaD4KKyNpbmNsdWRlIDx2aWRlby5oPgorI2luY2x1ZGUg
PHZpZGVvX2JyaWRnZS5oPgorI2luY2x1ZGUgPGFzbS9pby5oPgorI2luY2x1ZGUgPGFzbS9hcmNo
L2dwaW8uaD4KKyNpbmNsdWRlIDxkbS9kZXZpY2UtaW50ZXJuYWwuaD4KKyNpbmNsdWRlIDxsaW51
eC9pb3BvbGwuaD4KKyNpbmNsdWRlIDxwb3dlci9yZWd1bGF0b3IuaD4KKworI2RlZmluZSBIV1ZF
Ul8xMzAJCQkweDMxMzMzMDAwCS8qIElQIHZlcnNpb24gMS4zMCAqLworI2RlZmluZSBIV1ZFUl8x
MzEJCQkweDMxMzMzMTAwCS8qIElQIHZlcnNpb24gMS4zMSAqLworCisvKiBEU0kgZGlnaXRhbCBy
ZWdpc3RlcnMgJiBiaXQgZGVmaW5pdGlvbnMgKi8KKyNkZWZpbmUgRFNJX1ZFUlNJT04JCQkweDAw
CisjZGVmaW5lIFZFUlNJT04JCQkJR0VOTUFTSygzMSwgOCkKKworLyoKKyAqIERTSSB3cmFwcGVy
IHJlZ2lzdGVycyAmIGJpdCBkZWZpbml0aW9ucworICogTm90ZTogcmVnaXN0ZXJzIGFyZSBuYW1l
ZCBhcyBpbiB0aGUgUmVmZXJlbmNlIE1hbnVhbAorICovCisjZGVmaW5lIERTSV9XQ0ZHUgkweDA0
MDAJCS8qIFdyYXBwZXIgQ29uRmlHdXJhdGlvbiBSZWcgKi8KKyNkZWZpbmUgV0NGR1JfRFNJTQlC
SVQoMCkJCS8qIERTSSBNb2RlICovCisjZGVmaW5lIFdDRkdSX0NPTE1VWAlHRU5NQVNLKDMsIDEp
CS8qIENPTG9yIE1VbHRpcGxlWGluZyAqLworCisjZGVmaW5lIERTSV9XQ1IJCTB4MDQwNAkJLyog
V3JhcHBlciBDb250cm9sIFJlZyAqLworI2RlZmluZSBXQ1JfRFNJRU4JQklUKDMpCQkvKiBEU0kg
RU5hYmxlICovCisKKyNkZWZpbmUgRFNJX1dJU1IJMHgwNDBDCQkvKiBXcmFwcGVyIEludGVycnVw
dCBhbmQgU3RhdHVzIFJlZyAqLworI2RlZmluZSBXSVNSX1BMTExTCUJJVCg4KQkJLyogUExMIExv
Y2sgU3RhdHVzICovCisjZGVmaW5lIFdJU1JfUlJTCUJJVCgxMikJCS8qIFJlZ3VsYXRvciBSZWFk
eSBTdGF0dXMgKi8KKworI2RlZmluZSBEU0lfV1BDUjAJMHgwNDE4CQkvKiBXcmFwcGVyIFBoeSBD
b25mIFJlZyAwICovCisjZGVmaW5lIFdQQ1IwX1VJWDQJR0VOTUFTSyg1LCAwKQkvKiBVbml0IElu
dGVydmFsIFggNCAqLworI2RlZmluZSBXUENSMF9URERMCUJJVCgxNikJCS8qIFR1cm4gRGlzYWJs
ZSBEYXRhIExhbmVzICovCisKKyNkZWZpbmUgRFNJX1dSUENSCTB4MDQzMAkJLyogV3JhcHBlciBS
ZWd1bGF0b3IgJiBQbGwgQ3RybCBSZWcgKi8KKyNkZWZpbmUgV1JQQ1JfUExMRU4JQklUKDApCQkv
KiBQTEwgRU5hYmxlICovCisjZGVmaW5lIFdSUENSX05ESVYJR0VOTUFTSyg4LCAyKQkvKiBwbGwg
bG9vcCBESVZpc2lvbiBGYWN0b3IgKi8KKyNkZWZpbmUgV1JQQ1JfSURGCUdFTk1BU0soMTQsIDEx
KQkvKiBwbGwgSW5wdXQgRGl2aXNpb24gRmFjdG9yICovCisjZGVmaW5lIFdSUENSX09ERglHRU5N
QVNLKDE3LCAxNikJLyogcGxsIE91dHB1dCBEaXZpc2lvbiBGYWN0b3IgKi8KKyNkZWZpbmUgV1JQ
Q1JfUkVHRU4JQklUKDI0KQkJLyogUkVHdWxhdG9yIEVOYWJsZSAqLworI2RlZmluZSBXUlBDUl9C
R1JFTglCSVQoMjgpCQkvKiBCYW5kR2FwIFJlZmVyZW5jZSBFTmFibGUgKi8KKyNkZWZpbmUgSURG
X01JTgkJMQorI2RlZmluZSBJREZfTUFYCQk3CisjZGVmaW5lIE5ESVZfTUlOCTEwCisjZGVmaW5l
IE5ESVZfTUFYCTEyNQorI2RlZmluZSBPREZfTUlOCQkxCisjZGVmaW5lIE9ERl9NQVgJCTgKKwor
LyogZHNpIGNvbG9yIGZvcm1hdCBjb2RpbmcgYWNjb3JkaW5nIHRvIHRoZSBkYXRhc2hlZXQgKi8K
K2VudW0gZHNpX2NvbG9yIHsKKwlEU0lfUkdCNTY1X0NPTkYxLAorCURTSV9SR0I1NjVfQ09ORjIs
CisJRFNJX1JHQjU2NV9DT05GMywKKwlEU0lfUkdCNjY2X0NPTkYxLAorCURTSV9SR0I2NjZfQ09O
RjIsCisJRFNJX1JHQjg4OCwKK307CisKKyNkZWZpbmUgTEFORV9NSU5fS0JQUwkzMTI1MAorI2Rl
ZmluZSBMQU5FX01BWF9LQlBTCTUwMDAwMAorCisvKiBUaW1lb3V0IGZvciByZWd1bGF0b3Igb24v
b2ZmLCBwbGwgbG9jay91bmxvY2sgJiBmaWZvIGVtcHR5ICovCisjZGVmaW5lIFRJTUVPVVRfVVMJ
MjAwMDAwCisKK3N0cnVjdCBzdG0zMl9kc2lfcHJpdiB7CisJc3RydWN0IG1pcGlfZHNpX2Rldmlj
ZSBkZXZpY2U7CisJdm9pZCBfX2lvbWVtICpiYXNlOworCXN0cnVjdCB1ZGV2aWNlICpwYW5lbDsK
Kwl1MzIgcGxscmVmX2NsazsKKwl1MzIgaHdfdmVyc2lvbjsKKwlpbnQgbGFuZV9taW5fa2JwczsK
KwlpbnQgbGFuZV9tYXhfa2JwczsKKwlzdHJ1Y3QgdWRldmljZSAqdmRkX3JlZzsKKwlzdHJ1Y3Qg
dWRldmljZSAqZHNpX2hvc3Q7Cit9OworCitzdGF0aWMgaW5saW5lIHZvaWQgZHNpX3dyaXRlKHN0
cnVjdCBzdG0zMl9kc2lfcHJpdiAqZHNpLCB1MzIgcmVnLCB1MzIgdmFsKQoreworCXdyaXRlbCh2
YWwsIGRzaS0+YmFzZSArIHJlZyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdTMyIGRzaV9yZWFkKHN0
cnVjdCBzdG0zMl9kc2lfcHJpdiAqZHNpLCB1MzIgcmVnKQoreworCXJldHVybiByZWFkbChkc2kt
PmJhc2UgKyByZWcpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZHNpX3NldChzdHJ1Y3Qgc3Rt
MzJfZHNpX3ByaXYgKmRzaSwgdTMyIHJlZywgdTMyIG1hc2spCit7CisJZHNpX3dyaXRlKGRzaSwg
cmVnLCBkc2lfcmVhZChkc2ksIHJlZykgfCBtYXNrKTsKK30KKworc3RhdGljIGlubGluZSB2b2lk
IGRzaV9jbGVhcihzdHJ1Y3Qgc3RtMzJfZHNpX3ByaXYgKmRzaSwgdTMyIHJlZywgdTMyIG1hc2sp
Cit7CisJZHNpX3dyaXRlKGRzaSwgcmVnLCBkc2lfcmVhZChkc2ksIHJlZykgJiB+bWFzayk7Cit9
CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBkc2lfdXBkYXRlX2JpdHMoc3RydWN0IHN0bTMyX2RzaV9w
cml2ICpkc2ksIHUzMiByZWcsCisJCQkJICAgdTMyIG1hc2ssIHUzMiB2YWwpCit7CisJZHNpX3dy
aXRlKGRzaSwgcmVnLCAoZHNpX3JlYWQoZHNpLCByZWcpICYgfm1hc2spIHwgdmFsKTsKK30KKwor
c3RhdGljIGVudW0gZHNpX2NvbG9yIGRzaV9jb2xvcl9mcm9tX21pcGkodTMyIGZtdCkKK3sKKwlz
d2l0Y2ggKGZtdCkgeworCWNhc2UgTUlQSV9EU0lfRk1UX1JHQjg4ODoKKwkJcmV0dXJuIERTSV9S
R0I4ODg7CisJY2FzZSBNSVBJX0RTSV9GTVRfUkdCNjY2OgorCQlyZXR1cm4gRFNJX1JHQjY2Nl9D
T05GMjsKKwljYXNlIE1JUElfRFNJX0ZNVF9SR0I2NjZfUEFDS0VEOgorCQlyZXR1cm4gRFNJX1JH
QjY2Nl9DT05GMTsKKwljYXNlIE1JUElfRFNJX0ZNVF9SR0I1NjU6CisJCXJldHVybiBEU0lfUkdC
NTY1X0NPTkYxOworCWRlZmF1bHQ6CisJCXByX2VycigiTUlQSSBjb2xvciBpbnZhbGlkLCBzbyB3
ZSB1c2UgcmdiODg4XG4iKTsKKwl9CisJcmV0dXJuIERTSV9SR0I4ODg7Cit9CisKK3N0YXRpYyBp
bnQgZHNpX3BsbF9nZXRfY2xrb3V0X2toeihpbnQgY2xraW5fa2h6LCBpbnQgaWRmLCBpbnQgbmRp
diwgaW50IG9kZikKK3sKKwlpbnQgZGl2aXNvciA9IGlkZiAqIG9kZjsKKworCS8qIHByZXZlbnQg
ZnJvbSBkaXZpc2lvbiBieSAwICovCisJaWYgKCFkaXZpc29yKQorCQlyZXR1cm4gMDsKKworCXJl
dHVybiBESVZfUk9VTkRfQ0xPU0VTVChjbGtpbl9raHogKiBuZGl2LCBkaXZpc29yKTsKK30KKwor
c3RhdGljIGludCBkc2lfcGxsX2dldF9wYXJhbXMoc3RydWN0IHN0bTMyX2RzaV9wcml2ICpkc2ks
CisJCQkgICAgICBpbnQgY2xraW5fa2h6LCBpbnQgY2xrb3V0X2toeiwKKwkJCSAgICAgIGludCAq
aWRmLCBpbnQgKm5kaXYsIGludCAqb2RmKQoreworCWludCBpLCBvLCBuLCBuX21pbiwgbl9tYXg7
CisJaW50IGZ2Y29fbWluLCBmdmNvX21heCwgZGVsdGEsIGJlc3RfZGVsdGE7IC8qIGFsbCBpbiBr
aHogKi8KKworCS8qIEVhcmx5IGNoZWNrcyBwcmV2ZW50aW5nIGRpdmlzaW9uIGJ5IDAgJiBvZGQg
cmVzdWx0cyAqLworCWlmIChjbGtpbl9raHogPD0gMCB8fCBjbGtvdXRfa2h6IDw9IDApCisJCXJl
dHVybiAtRUlOVkFMOworCisJZnZjb19taW4gPSBkc2ktPmxhbmVfbWluX2ticHMgKiAyICogT0RG
X01BWDsKKwlmdmNvX21heCA9IGRzaS0+bGFuZV9tYXhfa2JwcyAqIDIgKiBPREZfTUlOOworCisJ
YmVzdF9kZWx0YSA9IDEwMDAwMDA7IC8qIGJpZyBzdGFydGVkIHZhbHVlICgxMDAwMDAwa2h6KSAq
LworCisJZm9yIChpID0gSURGX01JTjsgaSA8PSBJREZfTUFYOyBpKyspIHsKKwkJLyogQ29tcHV0
ZSBuZGl2IHJhbmdlIGFjY29yZGluZyB0byBGdmNvICovCisJCW5fbWluID0gKChmdmNvX21pbiAq
IGkpIC8gKDIgKiBjbGtpbl9raHopKSArIDE7CisJCW5fbWF4ID0gKGZ2Y29fbWF4ICogaSkgLyAo
MiAqIGNsa2luX2toeik7CisKKwkJLyogTm8gbmVlZCB0byBjb250aW51ZSBpZGYgbG9vcCBpZiB3
ZSByZWFjaCBuZGl2IG1heCAqLworCQlpZiAobl9taW4gPj0gTkRJVl9NQVgpCisJCQlicmVhazsK
KworCQkvKiBDbGFtcCBuZGl2IHRvIHZhbGlkIHZhbHVlcyAqLworCQlpZiAobl9taW4gPCBORElW
X01JTikKKwkJCW5fbWluID0gTkRJVl9NSU47CisJCWlmIChuX21heCA+IE5ESVZfTUFYKQorCQkJ
bl9tYXggPSBORElWX01BWDsKKworCQlmb3IgKG8gPSBPREZfTUlOOyBvIDw9IE9ERl9NQVg7IG8g
Kj0gMikgeworCQkJbiA9IERJVl9ST1VORF9DTE9TRVNUKGkgKiBvICogY2xrb3V0X2toeiwgY2xr
aW5fa2h6KTsKKwkJCS8qIENoZWNrIG5kaXYgYWNjb3JkaW5nIHRvIHZjbyByYW5nZSAqLworCQkJ
aWYgKG4gPCBuX21pbiB8fCBuID4gbl9tYXgpCisJCQkJY29udGludWU7CisJCQkvKiBDaGVjayBp
ZiBuZXcgZGVsdGEgaXMgYmV0dGVyICYgc2F2ZXMgcGFyYW1ldGVycyAqLworCQkJZGVsdGEgPSBk
c2lfcGxsX2dldF9jbGtvdXRfa2h6KGNsa2luX2toeiwgaSwgbiwgbykgLQorCQkJCWNsa291dF9r
aHo7CisJCQlpZiAoZGVsdGEgPCAwKQorCQkJCWRlbHRhID0gLWRlbHRhOworCQkJaWYgKGRlbHRh
IDwgYmVzdF9kZWx0YSkgeworCQkJCSppZGYgPSBpOworCQkJCSpuZGl2ID0gbjsKKwkJCQkqb2Rm
ID0gbzsKKwkJCQliZXN0X2RlbHRhID0gZGVsdGE7CisJCQl9CisJCQkvKiBmYXN0IHJldHVybiBp
biBjYXNlIG9mICJwZXJmZWN0IHJlc3VsdCIgKi8KKwkJCWlmICghZGVsdGEpCisJCQkJcmV0dXJu
IDA7CisJCX0KKwl9CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBkc2lfcGh5X2luaXQo
dm9pZCAqcHJpdl9kYXRhKQoreworCXN0cnVjdCBtaXBpX2RzaV9kZXZpY2UgKmRldmljZSA9IHBy
aXZfZGF0YTsKKwlzdHJ1Y3QgdWRldmljZSAqZGV2ID0gZGV2aWNlLT5kZXY7CisJc3RydWN0IHN0
bTMyX2RzaV9wcml2ICpkc2kgPSBkZXZfZ2V0X3ByaXYoZGV2KTsKKwl1MzIgdmFsOworCWludCBy
ZXQ7CisKKwlkZWJ1ZygiSW5pdGlhbGl6ZSBEU0kgcGh5c2ljYWwgbGF5ZXJcbiIpOworCisJLyog
RW5hYmxlIHRoZSByZWd1bGF0b3IgKi8KKwlkc2lfc2V0KGRzaSwgRFNJX1dSUENSLCBXUlBDUl9S
RUdFTiB8IFdSUENSX0JHUkVOKTsKKwlyZXQgPSByZWFkbF9wb2xsX3RpbWVvdXQoZHNpLT5iYXNl
ICsgRFNJX1dJU1IsIHZhbCwgdmFsICYgV0lTUl9SUlMsCisJCQkJIFRJTUVPVVRfVVMpOworCWlm
IChyZXQpIHsKKwkJZGVidWcoIiFUSU1FT1VUISB3YWl0aW5nIFJFR1VcbiIpOworCQlyZXR1cm4g
cmV0OworCX0KKworCS8qIEVuYWJsZSB0aGUgRFNJIFBMTCAmIHdhaXQgZm9yIGl0cyBsb2NrICov
CisJZHNpX3NldChkc2ksIERTSV9XUlBDUiwgV1JQQ1JfUExMRU4pOworCXJldCA9IHJlYWRsX3Bv
bGxfdGltZW91dChkc2ktPmJhc2UgKyBEU0lfV0lTUiwgdmFsLCB2YWwgJiBXSVNSX1BMTExTLAor
CQkJCSBUSU1FT1VUX1VTKTsKKwlpZiAocmV0KSB7CisJCWRlYnVnKCIhVElNRU9VVCEgd2FpdGlu
ZyBQTExcbiIpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMg
dm9pZCBkc2lfcGh5X3Bvc3Rfc2V0X21vZGUodm9pZCAqcHJpdl9kYXRhLCB1bnNpZ25lZCBsb25n
IG1vZGVfZmxhZ3MpCit7CisJc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZGV2aWNlID0gcHJpdl9k
YXRhOworCXN0cnVjdCB1ZGV2aWNlICpkZXYgPSBkZXZpY2UtPmRldjsKKwlzdHJ1Y3Qgc3RtMzJf
ZHNpX3ByaXYgKmRzaSA9IGRldl9nZXRfcHJpdihkZXYpOworCisJZGVidWcoIlNldCBtb2RlICVw
IGVuYWJsZSAlbGRcbiIsIGRzaSwKKwkgICAgICBtb2RlX2ZsYWdzICYgTUlQSV9EU0lfTU9ERV9W
SURFTyk7CisKKwlpZiAoIWRzaSkKKwkJcmV0dXJuOworCisJLyoKKwkgKiBEU0kgd3JhcHBlciBt
dXN0IGJlIGVuYWJsZWQgaW4gdmlkZW8gbW9kZSAmIGRpc2FibGVkIGluIGNvbW1hbmQgbW9kZS4K
KwkgKiBJZiB3cmFwcGVyIGlzIGVuYWJsZWQgaW4gY29tbWFuZCBtb2RlLCB0aGUgZGlzcGxheSBj
b250cm9sbGVyCisJICogcmVnaXN0ZXIgYWNjZXNzIHdpbGwgaGFuZy4KKwkgKi8KKworCWlmICht
b2RlX2ZsYWdzICYgTUlQSV9EU0lfTU9ERV9WSURFTykKKwkJZHNpX3NldChkc2ksIERTSV9XQ1Is
IFdDUl9EU0lFTik7CisJZWxzZQorCQlkc2lfY2xlYXIoZHNpLCBEU0lfV0NSLCBXQ1JfRFNJRU4p
OworfQorCitzdGF0aWMgaW50IGRzaV9nZXRfbGFuZV9tYnBzKHZvaWQgKnByaXZfZGF0YSwgc3Ry
dWN0IGRpc3BsYXlfdGltaW5nICp0aW1pbmdzLAorCQkJICAgICB1MzIgbGFuZXMsIHUzMiBmb3Jt
YXQsIHVuc2lnbmVkIGludCAqbGFuZV9tYnBzKQoreworCXN0cnVjdCBtaXBpX2RzaV9kZXZpY2Ug
KmRldmljZSA9IHByaXZfZGF0YTsKKwlzdHJ1Y3QgdWRldmljZSAqZGV2ID0gZGV2aWNlLT5kZXY7
CisJc3RydWN0IHN0bTMyX2RzaV9wcml2ICpkc2kgPSBkZXZfZ2V0X3ByaXYoZGV2KTsKKwlpbnQg
aWRmLCBuZGl2LCBvZGYsIHBsbF9pbl9raHosIHBsbF9vdXRfa2h6OworCWludCByZXQsIGJwcDsK
Kwl1MzIgdmFsOworCisJLyogVXBkYXRlIGxhbmUgY2FwYWJpbGl0aWVzIGFjY29yZGluZyB0byBo
dyB2ZXJzaW9uICovCisJZHNpLT5od192ZXJzaW9uID0gZHNpX3JlYWQoZHNpLCBEU0lfVkVSU0lP
TikgJiBWRVJTSU9OOworCWRzaS0+bGFuZV9taW5fa2JwcyA9IExBTkVfTUlOX0tCUFM7CisJZHNp
LT5sYW5lX21heF9rYnBzID0gTEFORV9NQVhfS0JQUzsKKwlpZiAoZHNpLT5od192ZXJzaW9uID09
IEhXVkVSXzEzMSkgeworCQlkc2ktPmxhbmVfbWluX2ticHMgKj0gMjsKKwkJZHNpLT5sYW5lX21h
eF9rYnBzICo9IDI7CisJfQorCisJcGxsX2luX2toeiA9IGRzaS0+cGxscmVmX2NsayAvIDEwMDA7
CisKKwkvKiBDb21wdXRlIHJlcXVlc3RlZCBwbGwgb3V0ICovCisJYnBwID0gbWlwaV9kc2lfcGl4
ZWxfZm9ybWF0X3RvX2JwcChmb3JtYXQpOworCXBsbF9vdXRfa2h6ID0gKHRpbWluZ3MtPnBpeGVs
Y2xvY2sudHlwIC8gMTAwMCkgKiBicHAgLyBsYW5lczsKKwkvKiBBZGQgMjAlIHRvIHBsbCBvdXQg
dG8gYmUgaGlnaGVyIHRoYW4gcGl4ZWwgYncgKGJ1cnN0IG1vZGUgb25seSkgKi8KKwlwbGxfb3V0
X2toeiA9IChwbGxfb3V0X2toeiAqIDEyKSAvIDEwOworCWlmIChwbGxfb3V0X2toeiA+IGRzaS0+
bGFuZV9tYXhfa2JwcykgeworCQlwbGxfb3V0X2toeiA9IGRzaS0+bGFuZV9tYXhfa2JwczsKKwkJ
ZGV2X3dhcm4oZGV2LCAiV2FybmluZyBtYXggcGh5IG1icHMgaXMgdXNlZFxuIik7CisJfQorCWlm
IChwbGxfb3V0X2toeiA8IGRzaS0+bGFuZV9taW5fa2JwcykgeworCQlwbGxfb3V0X2toeiA9IGRz
aS0+bGFuZV9taW5fa2JwczsKKwkJZGV2X3dhcm4oZGV2LCAiV2FybmluZyBtaW4gcGh5IG1icHMg
aXMgdXNlZFxuIik7CisJfQorCisJLyogQ29tcHV0ZSBiZXN0IHBsbCBwYXJhbWV0ZXJzICovCisJ
aWRmID0gMDsKKwluZGl2ID0gMDsKKwlvZGYgPSAwOworCXJldCA9IGRzaV9wbGxfZ2V0X3BhcmFt
cyhkc2ksIHBsbF9pbl9raHosIHBsbF9vdXRfa2h6LAorCQkJCSAmaWRmLCAmbmRpdiwgJm9kZik7
CisJaWYgKHJldCkgeworCQlkZXZfZXJyKGRldiwgIldhcm5pbmcgZHNpX3BsbF9nZXRfcGFyYW1z
KCk6IGJhZCBwYXJhbXNcbiIpOworCQlyZXR1cm4gcmV0OworCX0KKworCS8qIEdldCB0aGUgYWRq
dXN0ZWQgcGxsIG91dCB2YWx1ZSAqLworCXBsbF9vdXRfa2h6ID0gZHNpX3BsbF9nZXRfY2xrb3V0
X2toeihwbGxfaW5fa2h6LCBpZGYsIG5kaXYsIG9kZik7CisKKwkvKiBTZXQgdGhlIFBMTCBkaXZp
c2lvbiBmYWN0b3JzICovCisJZHNpX3VwZGF0ZV9iaXRzKGRzaSwgRFNJX1dSUENSLAlXUlBDUl9O
RElWIHwgV1JQQ1JfSURGIHwgV1JQQ1JfT0RGLAorCQkJKG5kaXYgPDwgMikgfCAoaWRmIDw8IDEx
KSB8ICgoZmZzKG9kZikgLSAxKSA8PCAxNikpOworCisJLyogQ29tcHV0ZSB1aXg0ICYgc2V0IHRo
ZSBiaXQgcGVyaW9kIGluIGhpZ2gtc3BlZWQgbW9kZSAqLworCXZhbCA9IDQwMDAwMDAgLyBwbGxf
b3V0X2toejsKKwlkc2lfdXBkYXRlX2JpdHMoZHNpLCBEU0lfV1BDUjAsIFdQQ1IwX1VJWDQsIHZh
bCk7CisKKwkvKiBTZWxlY3QgdmlkZW8gbW9kZSBieSByZXNldHRpbmcgRFNJTSBiaXQgKi8KKwlk
c2lfY2xlYXIoZHNpLCBEU0lfV0NGR1IsIFdDRkdSX0RTSU0pOworCisJLyogU2VsZWN0IHRoZSBj
b2xvciBjb2RpbmcgKi8KKwlkc2lfdXBkYXRlX2JpdHMoZHNpLCBEU0lfV0NGR1IsIFdDRkdSX0NP
TE1VWCwKKwkJCWRzaV9jb2xvcl9mcm9tX21pcGkoZm9ybWF0KSA8PCAxKTsKKworCSpsYW5lX21i
cHMgPSBwbGxfb3V0X2toeiAvIDEwMDA7CisKKwlkZWJ1ZygicGxsX2luICV1a0h6IHBsbF9vdXQg
JXVrSHogbGFuZV9tYnBzICV1TUh6XG4iLAorCSAgICAgIHBsbF9pbl9raHosIHBsbF9vdXRfa2h6
LCAqbGFuZV9tYnBzKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IG1p
cGlfZHNpX3BoeV9vcHMgZHNpX3N0bV9waHlfb3BzID0geworCS5pbml0ID0gZHNpX3BoeV9pbml0
LAorCS5nZXRfbGFuZV9tYnBzID0gZHNpX2dldF9sYW5lX21icHMsCisJLnBvc3Rfc2V0X21vZGUg
PSBkc2lfcGh5X3Bvc3Rfc2V0X21vZGUsCit9OworCitzdGF0aWMgaW50IHN0bTMyX2RzaV9hdHRh
Y2goc3RydWN0IHVkZXZpY2UgKmRldikKK3sKKwlzdHJ1Y3Qgc3RtMzJfZHNpX3ByaXYgKnByaXYg
PSBkZXZfZ2V0X3ByaXYoZGV2KTsKKwlzdHJ1Y3QgbWlwaV9kc2lfZGV2aWNlICpkZXZpY2UgPSAm
cHJpdi0+ZGV2aWNlOworCXN0cnVjdCBtaXBpX2RzaV9wYW5lbF9wbGF0ICptcGxhdDsKKwlzdHJ1
Y3QgZGlzcGxheV90aW1pbmcgdGltaW5nczsKKwlpbnQgcmV0OworCisJcmV0ID0gdWNsYXNzX2Zp
cnN0X2RldmljZShVQ0xBU1NfUEFORUwsICZwcml2LT5wYW5lbCk7CisJaWYgKHJldCkgeworCQlk
ZXZfZXJyKGRldiwgInBhbmVsIGRldmljZSBlcnJvciAlZFxuIiwgcmV0KTsKKwkJcmV0dXJuIHJl
dDsKKwl9CisKKwltcGxhdCA9IGRldl9nZXRfcGxhdGRhdGEocHJpdi0+cGFuZWwpOworCW1wbGF0
LT5kZXZpY2UgPSAmcHJpdi0+ZGV2aWNlOworCisJcmV0ID0gcGFuZWxfZ2V0X2Rpc3BsYXlfdGlt
aW5nKHByaXYtPnBhbmVsLCAmdGltaW5ncyk7CisJaWYgKHJldCkgeworCQlyZXQgPSBmZHRkZWNf
ZGVjb2RlX2Rpc3BsYXlfdGltaW5nKGdkLT5mZHRfYmxvYiwKKwkJCQkJCSAgIGRldl9vZl9vZmZz
ZXQocHJpdi0+cGFuZWwpLAorCQkJCQkJICAgMCwgJnRpbWluZ3MpOworCQlpZiAocmV0KSB7CisJ
CQlkZXZfZXJyKGRldiwgImRlY29kZSBkaXNwbGF5IHRpbWluZyBlcnJvciAlZFxuIiwgcmV0KTsK
KwkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKKwlyZXQgPSB1Y2xhc3NfZ2V0X2RldmljZShVQ0xB
U1NfRFNJX0hPU1QsIDAsICZwcml2LT5kc2lfaG9zdCk7CisJaWYgKHJldCkgeworCQlkZXZfZXJy
KGRldiwgIk5vIHZpZGVvIGRzaSBob3N0IGRldGVjdGVkICVkXG4iLCByZXQpOworCQlyZXR1cm4g
cmV0OworCX0KKworCXJldCA9IGRzaV9ob3N0X2luaXQocHJpdi0+ZHNpX2hvc3QsIGRldmljZSwg
JnRpbWluZ3MsIDIsCisJCQkgICAgJmRzaV9zdG1fcGh5X29wcyk7CisJaWYgKHJldCkgeworCQlk
ZXZfZXJyKGRldiwgImZhaWxlZCB0byBpbml0aWFsaXplIG1pcGkgZHNpIGhvc3RcbiIpOworCQly
ZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IHN0bTMyX2RzaV9z
ZXRfYmFja2xpZ2h0KHN0cnVjdCB1ZGV2aWNlICpkZXYsIGludCBwZXJjZW50KQoreworCXN0cnVj
dCBzdG0zMl9kc2lfcHJpdiAqcHJpdiA9IGRldl9nZXRfcHJpdihkZXYpOworCWludCByZXQ7CisK
KwlyZXQgPSBwYW5lbF9lbmFibGVfYmFja2xpZ2h0KHByaXYtPnBhbmVsKTsKKwlpZiAocmV0KSB7
CisJCWRldl9lcnIoZGV2LCAicGFuZWwgJXMgZW5hYmxlIGJhY2tsaWdodCBlcnJvciAlZFxuIiwK
KwkJCXByaXYtPnBhbmVsLT5uYW1lLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldCA9
IGRzaV9ob3N0X2VuYWJsZShwcml2LT5kc2lfaG9zdCk7CisJaWYgKHJldCkgeworCQlkZXZfZXJy
KGRldiwgImZhaWxlZCB0byBlbmFibGUgbWlwaSBkc2kgaG9zdFxuIik7CisJCXJldHVybiByZXQ7
CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgc3RtMzJfZHNpX3Byb2JlKHN0cnVj
dCB1ZGV2aWNlICpkZXYpCit7CisJc3RydWN0IHN0bTMyX2RzaV9wcml2ICpwcml2ID0gZGV2X2dl
dF9wcml2KGRldik7CisJc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZGV2aWNlID0gJnByaXYtPmRl
dmljZTsKKwlzdHJ1Y3QgcmVzZXRfY3RsIHJzdDsKKwlzdHJ1Y3QgY2xrIGNsazsKKwlpbnQgcmV0
OworCisJZGV2aWNlLT5kZXYgPSBkZXY7CisKKwlwcml2LT5iYXNlID0gKHZvaWQgKilkZXZfcmVh
ZF9hZGRyKGRldik7CisJaWYgKChmZHRfYWRkcl90KXByaXYtPmJhc2UgPT0gRkRUX0FERFJfVF9O
T05FKSB7CisJCWRldl9lcnIoZGV2LCAiZHNpIGR0IHJlZ2lzdGVyIGFkZHJlc3MgZXJyb3JcbiIp
OworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlpZiAoSVNfRU5BQkxFRChDT05GSUdfRE1fUkVH
VUxBVE9SKSkgeworCQlyZXQgPSAgZGV2aWNlX2dldF9zdXBwbHlfcmVndWxhdG9yKGRldiwgInBo
eS1kc2ktc3VwcGx5IiwKKwkJCQkJCSAgICZwcml2LT52ZGRfcmVnKTsKKwkJaWYgKHJldCAmJiBy
ZXQgIT0gLUVOT0VOVCkgeworCQkJZGV2X2VycihkZXYsICJXYXJuaW5nOiBjYW5ub3QgZ2V0IHBo
eSBkc2kgc3VwcGx5XG4iKTsKKwkJCXJldHVybiAtRU5PREVWOworCQl9CisKKwkJaWYgKHJldCAh
PSAtRU5PRU5UKSB7CisJCQlyZXQgPSByZWd1bGF0b3Jfc2V0X2VuYWJsZShwcml2LT52ZGRfcmVn
LCB0cnVlKTsKKwkJCWlmIChyZXQpCisJCQkJcmV0dXJuIHJldDsKKwkJfQorCX0KKworCXJldCA9
IGNsa19nZXRfYnlfbmFtZShkZXZpY2UtPmRldiwgInBjbGsiLCAmY2xrKTsKKwlpZiAocmV0KSB7
CisJCWRldl9lcnIoZGV2LCAicGVyaXBoZXJhbCBjbG9jayBnZXQgZXJyb3IgJWRcbiIsIHJldCk7
CisJCWdvdG8gZXJyX3JlZzsKKwl9CisKKwlyZXQgPSBjbGtfZW5hYmxlKCZjbGspOworCWlmIChy
ZXQpIHsKKwkJZGV2X2VycihkZXYsICJwZXJpcGhlcmFsIGNsb2NrIGVuYWJsZSBlcnJvciAlZFxu
IiwgcmV0KTsKKwkJZ290byBlcnJfcmVnOworCX0KKworCXJldCA9IGNsa19nZXRfYnlfbmFtZShk
ZXYsICJyZWYiLCAmY2xrKTsKKwlpZiAocmV0KSB7CisJCWRldl9lcnIoZGV2LCAicGxsIHJlZmVy
ZW5jZSBjbG9jayBnZXQgZXJyb3IgJWRcbiIsIHJldCk7CisJCWdvdG8gZXJyX2NsazsKKwl9CisK
Kwlwcml2LT5wbGxyZWZfY2xrID0gKHVuc2lnbmVkIGludCljbGtfZ2V0X3JhdGUoJmNsayk7CisK
KwlyZXQgPSByZXNldF9nZXRfYnlfaW5kZXgoZGV2aWNlLT5kZXYsIDAsICZyc3QpOworCWlmIChy
ZXQpIHsKKwkJZGV2X2VycihkZXYsICJtaXNzaW5nIGRzaSBoYXJkd2FyZSByZXNldFxuIik7CisJ
CWdvdG8gZXJyX2NsazsKKwl9CisKKwkvKiBSZXNldCAqLworCXJlc2V0X2RlYXNzZXJ0KCZyc3Qp
OworCisJcmV0dXJuIDA7CitlcnJfY2xrOgorCWNsa19kaXNhYmxlKCZjbGspOworZXJyX3JlZzoK
KwlpZiAoSVNfRU5BQkxFRChDT05GSUdfRE1fUkVHVUxBVE9SKSkKKwkJcmVndWxhdG9yX3NldF9l
bmFibGUocHJpdi0+dmRkX3JlZywgZmFsc2UpOworCisJcmV0dXJuIHJldDsKK30KKworc3RydWN0
IHZpZGVvX2JyaWRnZV9vcHMgc3RtMzJfZHNpX29wcyA9IHsKKwkuYXR0YWNoID0gc3RtMzJfZHNp
X2F0dGFjaCwKKwkuc2V0X2JhY2tsaWdodCA9IHN0bTMyX2RzaV9zZXRfYmFja2xpZ2h0LAorfTsK
Kworc3RhdGljIGNvbnN0IHN0cnVjdCB1ZGV2aWNlX2lkIHN0bTMyX2RzaV9pZHNbXSA9IHsKKwl7
IC5jb21wYXRpYmxlID0gInN0LHN0bTMyLWRzaSJ9LAorCXsgfQorfTsKKworVV9CT09UX0RSSVZF
UihzdG0zMl9kc2kpID0geworCS5uYW1lCQkJCT0gInN0bTMyLWRpc3BsYXktZHNpIiwKKwkuaWQJ
CQkJPSBVQ0xBU1NfVklERU9fQlJJREdFLAorCS5vZl9tYXRjaAkJCT0gc3RtMzJfZHNpX2lkcywK
KwkuYmluZAkJCQk9IGRtX3NjYW5fZmR0X2RldiwKKwkucHJvYmUJCQkJPSBzdG0zMl9kc2lfcHJv
YmUsCisJLm9wcwkJCQk9ICZzdG0zMl9kc2lfb3BzLAorCS5wcml2X2F1dG9fYWxsb2Nfc2l6ZQkJ
PSBzaXplb2Yoc3RydWN0IHN0bTMyX2RzaV9wcml2KSwKK307Ci0tIAoyLjcuNAoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KVWJvb3Qtc3RtMzIgbWFpbGlu
ZyBsaXN0ClVib290LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9z
dC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vdWJvb3Qtc3RtMzIK
